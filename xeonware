-- // GUI TO LUA \\ --

-- // INSTANCES: 113 | SCRIPTS: 17 | MODULES: 0 \\ --

local UI = {}

-- // StarterGui.Xeonware \\ --
UI["1"] = Instance.new("ScreenGui", game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui"))
UI["1"]["Name"] = [[Xeonware]]

-- // StarterGui.Xeonware.Frame \\ --
UI["2"] = Instance.new("Frame", UI["1"])
UI["2"]["BorderSizePixel"] = 0
UI["2"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["2"]["Size"] = UDim2.new(0, 899, 0, 657)
UI["2"]["Position"] = UDim2.new(0.18364, 0, 0.08668, 0)
UI["2"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["2"]["BackgroundTransparency"] = 0.3

-- // StarterGui.Xeonware.Frame.UICorner \\ --
UI["3"] = Instance.new("UICorner", UI["2"])
UI["3"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Mains \\ --
UI["4"] = Instance.new("Frame", UI["2"])
UI["4"]["Active"] = true
UI["4"]["BorderSizePixel"] = 0
UI["4"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["4"]["Size"] = UDim2.new(0, 670, 0, 629)
UI["4"]["Position"] = UDim2.new(0.23967, 0, 0.01804, 0)
UI["4"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["4"]["Name"] = [[Mains]]
UI["4"]["BackgroundTransparency"] = 0.3

-- // StarterGui.Xeonware.Frame.Mains.UICorner \\ --
UI["5"] = Instance.new("UICorner", UI["4"])
UI["5"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Mains.Visuals \\ --
UI["6"] = Instance.new("Frame", UI["4"])
UI["6"]["Visible"] = false
UI["6"]["BorderSizePixel"] = 0
UI["6"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["6"]["Size"] = UDim2.new(0, 640, 0, 595)
UI["6"]["Position"] = UDim2.new(0.02239, 0, 0.02703, 0)
UI["6"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["6"]["Name"] = [[Visuals]]
UI["6"]["BackgroundTransparency"] = 0.9

-- // StarterGui.Xeonware.Frame.Mains.Visuals.main \\ --
UI["7"] = Instance.new("Frame", UI["6"])
UI["7"]["BorderSizePixel"] = 3
UI["7"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["7"]["Size"] = UDim2.new(0, 350, 0, 225)
UI["7"]["Position"] = UDim2.new(0.03854, 0, 0.04076, 0)
UI["7"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["7"]["Name"] = [[main]]

-- // StarterGui.Xeonware.Frame.Mains.Visuals.main.ESP \\ --
UI["8"] = Instance.new("TextLabel", UI["7"])
UI["8"]["TextWrapped"] = true
UI["8"]["BorderSizePixel"] = 3
UI["8"]["TextScaled"] = true
UI["8"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["8"]["TextSize"] = 14
UI["8"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["8"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["8"]["BackgroundTransparency"] = 0.5
UI["8"]["RichText"] = true
UI["8"]["Size"] = UDim2.new(0, 308, 0, 50)
UI["8"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["8"]["Text"] = [[ESP MAIN]]
UI["8"]["Name"] = [[ESP]]
UI["8"]["Position"] = UDim2.new(0.08, 0, 0.02286, 0)

-- // StarterGui.Xeonware.Frame.Mains.Visuals.main.ESP.ON \\ --
UI["9"] = Instance.new("TextButton", UI["8"])
UI["9"]["TextWrapped"] = true
UI["9"]["BorderSizePixel"] = 0
UI["9"]["TextSize"] = 14
UI["9"]["TextColor3"] = Color3.fromRGB(171, 0, 255)
UI["9"]["TextScaled"] = true
UI["9"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
UI["9"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["9"]["RichText"] = true
UI["9"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["9"]["Name"] = [[ON]]
UI["9"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["9"]["Text"] = [[Toggle]]
UI["9"]["Position"] = UDim2.new(0.1526, 0, 1.42928, 0)

-- // StarterGui.Xeonware.Frame.Mains.Visuals.main.ESP.ON.UICorner \\ --
UI["a"] = Instance.new("UICorner", UI["9"])
UI["a"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Mains.Visuals.main.ESP.OFF \\ --
UI["b"] = Instance.new("TextButton", UI["8"])
UI["b"]["TextWrapped"] = true
UI["b"]["BorderSizePixel"] = 0
UI["b"]["TextSize"] = 14
UI["b"]["TextColor3"] = Color3.fromRGB(171, 0, 255)
UI["b"]["TextScaled"] = true
UI["b"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
UI["b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["b"]["RichText"] = true
UI["b"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["b"]["Name"] = [[OFF]]
UI["b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["b"]["Text"] = [[Toggle]]
UI["b"]["Visible"] = false
UI["b"]["Position"] = UDim2.new(0.1526, 0, 1.42928, 0)

-- // StarterGui.Xeonware.Frame.Mains.Visuals.main.ESP.OFF.UICorner \\ --
UI["c"] = Instance.new("UICorner", UI["b"])
UI["c"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Mains.Visuals.main.ESP.LocalScript \\ --
UI["d"] = Instance.new("LocalScript", UI["8"])


-- // StarterGui.Xeonware.Frame.Mains.Visuals.main.ESP.SELF \\ --
UI["e"] = Instance.new("TextButton", UI["8"])
UI["e"]["TextWrapped"] = true
UI["e"]["BorderSizePixel"] = 0
UI["e"]["TextSize"] = 14
UI["e"]["TextColor3"] = Color3.fromRGB(171, 0, 255)
UI["e"]["TextScaled"] = true
UI["e"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
UI["e"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["e"]["RichText"] = true
UI["e"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["e"]["Name"] = [[SELF]]
UI["e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["e"]["Text"] = [[Self ESP]]
UI["e"]["Position"] = UDim2.new(0.1526, 0, 2.82928, 0)

-- // StarterGui.Xeonware.Frame.Mains.Visuals.main.ESP.SELF.UICorner \\ --
UI["f"] = Instance.new("UICorner", UI["e"])
UI["f"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Mains.Visuals.main.settings \\ --
UI["10"] = Instance.new("LocalScript", UI["7"])
UI["10"]["Name"] = [[settings]]

-- // StarterGui.Xeonware.Frame.Mains.Visuals.main.jump \\ --
UI["11"] = Instance.new("TextButton", UI["7"])
UI["11"]["TextWrapped"] = true
UI["11"]["BorderSizePixel"] = 3
UI["11"]["TextSize"] = 14
UI["11"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["11"]["TextScaled"] = true
UI["11"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["11"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Italic)
UI["11"]["Size"] = UDim2.new(0, 150, 0, 50)
UI["11"]["BackgroundTransparency"] = 0.5
UI["11"]["Name"] = [[jump]]
UI["11"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["11"]["Text"] = [[set JumpHeight]]
UI["11"]["Visible"] = false
UI["11"]["Position"] = UDim2.new(0, 0, 0.28571, 0)

-- // StarterGui.Xeonware.Frame.Mains.Visuals.main.jump.value \\ --
UI["12"] = Instance.new("TextBox", UI["11"])
UI["12"]["TextColor3"] = Color3.fromRGB(0, 171, 255)
UI["12"]["PlaceholderColor3"] = Color3.fromRGB(0, 171, 255)
UI["12"]["BorderSizePixel"] = 3
UI["12"]["TextWrapped"] = true
UI["12"]["TextSize"] = 14
UI["12"]["Name"] = [[value]]
UI["12"]["TextScaled"] = true
UI["12"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["12"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Italic)
UI["12"]["Size"] = UDim2.new(0, 150, 0, 50)
UI["12"]["Position"] = UDim2.new(0, 0, 1, 0)
UI["12"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["12"]["Text"] = [[150]]
UI["12"]["BackgroundTransparency"] = 0.5

-- // StarterGui.Xeonware.Frame.Mains.Visuals.main.walk \\ --
UI["13"] = Instance.new("TextButton", UI["7"])
UI["13"]["TextWrapped"] = true
UI["13"]["BorderSizePixel"] = 3
UI["13"]["TextSize"] = 14
UI["13"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["13"]["TextScaled"] = true
UI["13"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["13"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Italic)
UI["13"]["Size"] = UDim2.new(0, 150, 0, 50)
UI["13"]["BackgroundTransparency"] = 0.5
UI["13"]["Name"] = [[walk]]
UI["13"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["13"]["Text"] = [[set WalkSpeed]]
UI["13"]["Visible"] = false

-- // StarterGui.Xeonware.Frame.Mains.Visuals.main.walk.value \\ --
UI["14"] = Instance.new("TextBox", UI["13"])
UI["14"]["TextColor3"] = Color3.fromRGB(0, 171, 255)
UI["14"]["PlaceholderColor3"] = Color3.fromRGB(0, 171, 255)
UI["14"]["BorderSizePixel"] = 3
UI["14"]["TextWrapped"] = true
UI["14"]["TextSize"] = 14
UI["14"]["Name"] = [[value]]
UI["14"]["TextScaled"] = true
UI["14"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["14"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Italic)
UI["14"]["Size"] = UDim2.new(0, 150, 0, 50)
UI["14"]["Position"] = UDim2.new(0, 0, 1, 0)
UI["14"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["14"]["Text"] = [[150]]
UI["14"]["BackgroundTransparency"] = 0.5

-- // StarterGui.Xeonware.Frame.Mains.Visuals.main.UICorner \\ --
UI["15"] = Instance.new("UICorner", UI["7"])
UI["15"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Mains.Rage \\ --
UI["16"] = Instance.new("Frame", UI["4"])
UI["16"]["Visible"] = false
UI["16"]["BorderSizePixel"] = 0
UI["16"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["16"]["Size"] = UDim2.new(0, 640, 0, 595)
UI["16"]["Position"] = UDim2.new(0.02239, 0, 0.02703, 0)
UI["16"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["16"]["Name"] = [[Rage]]
UI["16"]["BackgroundTransparency"] = 0.9

-- // StarterGui.Xeonware.Frame.Mains.Rage.ragebot \\ --
UI["17"] = Instance.new("Frame", UI["16"])
UI["17"]["BorderSizePixel"] = 0
UI["17"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["17"]["Size"] = UDim2.new(0, 299, 0, 327)
UI["17"]["Position"] = UDim2.new(0.02344, 0, 0.02857, 0)
UI["17"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["17"]["Name"] = [[ragebot]]

-- // StarterGui.Xeonware.Frame.Mains.Rage.ragebot.UICorner \\ --
UI["18"] = Instance.new("UICorner", UI["17"])
UI["18"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Mains.Rage.ragebot.TextLabel \\ --
UI["19"] = Instance.new("TextLabel", UI["17"])
UI["19"]["TextWrapped"] = true
UI["19"]["BorderSizePixel"] = 0
UI["19"]["TextScaled"] = true
UI["19"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["19"]["TextSize"] = 14
UI["19"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["19"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["19"]["BackgroundTransparency"] = 1
UI["19"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["19"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["19"]["Text"] = [[RageBot]]
UI["19"]["Position"] = UDim2.new(0.16388, 0, -0.00306, 0)

-- // StarterGui.Xeonware.Frame.Mains.Rage.ragebot.AutoFireToggle \\ --
UI["1a"] = Instance.new("TextButton", UI["17"])
UI["1a"]["TextWrapped"] = true
UI["1a"]["BorderSizePixel"] = 0
UI["1a"]["TextSize"] = 14
UI["1a"]["TextColor3"] = Color3.fromRGB(255, 0, 5)
UI["1a"]["TextScaled"] = true
UI["1a"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
UI["1a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["1a"]["RichText"] = true
UI["1a"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["1a"]["Name"] = [[AutoFireToggle]]
UI["1a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["1a"]["Text"] = [[AutoFire (OFF)]]
UI["1a"]["Position"] = UDim2.new(0.04013, 0, 0.4064, 0)

-- // StarterGui.Xeonware.Frame.Mains.Rage.ragebot.AutoFireToggle.UICorner \\ --
UI["1b"] = Instance.new("UICorner", UI["1a"])
UI["1b"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Mains.Rage.ragebot.ToggleRagebot \\ --
UI["1c"] = Instance.new("TextButton", UI["17"])
UI["1c"]["TextWrapped"] = true
UI["1c"]["BorderSizePixel"] = 0
UI["1c"]["TextSize"] = 14
UI["1c"]["TextColor3"] = Color3.fromRGB(255, 0, 5)
UI["1c"]["TextScaled"] = true
UI["1c"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
UI["1c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["1c"]["RichText"] = true
UI["1c"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["1c"]["Name"] = [[ToggleRagebot]]
UI["1c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["1c"]["Text"] = [[Toggle (OFF)]]
UI["1c"]["Position"] = UDim2.new(0.04013, 0, 0.19539, 0)

-- // StarterGui.Xeonware.Frame.Mains.Rage.ragebot.ToggleRagebot.UICorner \\ --
UI["1d"] = Instance.new("UICorner", UI["1c"])
UI["1d"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Mains.Rage.main \\ --
UI["1e"] = Instance.new("LocalScript", UI["16"])
UI["1e"]["Name"] = [[main]]

-- // StarterGui.Xeonware.Frame.Mains.Rage.antiaim \\ --
UI["1f"] = Instance.new("Frame", UI["16"])
UI["1f"]["BorderSizePixel"] = 0
UI["1f"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["1f"]["Size"] = UDim2.new(0, 299, 0, 327)
UI["1f"]["Position"] = UDim2.new(0.51094, 0, 0.03025, 0)
UI["1f"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["1f"]["Name"] = [[antiaim]]

-- // StarterGui.Xeonware.Frame.Mains.Rage.antiaim.UICorner \\ --
UI["20"] = Instance.new("UICorner", UI["1f"])
UI["20"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Mains.Rage.antiaim.TextLabel \\ --
UI["21"] = Instance.new("TextLabel", UI["1f"])
UI["21"]["TextWrapped"] = true
UI["21"]["BorderSizePixel"] = 0
UI["21"]["TextScaled"] = true
UI["21"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["21"]["TextSize"] = 14
UI["21"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["21"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["21"]["BackgroundTransparency"] = 1
UI["21"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["21"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["21"]["Text"] = [[Anti-Aim]]
UI["21"]["Position"] = UDim2.new(0.16388, 0, -0.00306, 0)

-- // StarterGui.Xeonware.Frame.Mains.Rage.antiaim.AntiAimToggle \\ --
UI["22"] = Instance.new("TextButton", UI["1f"])
UI["22"]["TextWrapped"] = true
UI["22"]["BorderSizePixel"] = 0
UI["22"]["TextSize"] = 14
UI["22"]["TextColor3"] = Color3.fromRGB(255, 0, 5)
UI["22"]["TextScaled"] = true
UI["22"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
UI["22"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["22"]["RichText"] = true
UI["22"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["22"]["Name"] = [[AntiAimToggle]]
UI["22"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["22"]["Text"] = [[AntiAim (OFF)]]
UI["22"]["Position"] = UDim2.new(0.08696, 0, 0.19233, 0)

-- // StarterGui.Xeonware.Frame.Mains.Rage.antiaim.AntiAimToggle.UICorner \\ --
UI["23"] = Instance.new("UICorner", UI["22"])
UI["23"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Mains.Rage.antiaim.AntiAimType \\ --
UI["24"] = Instance.new("TextButton", UI["1f"])
UI["24"]["TextWrapped"] = true
UI["24"]["BorderSizePixel"] = 0
UI["24"]["TextSize"] = 14
UI["24"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["24"]["TextScaled"] = true
UI["24"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
UI["24"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["24"]["RichText"] = true
UI["24"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["24"]["Name"] = [[AntiAimType]]
UI["24"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["24"]["Text"] = [[AntiAim Type: Basic]]
UI["24"]["Position"] = UDim2.new(0.08696, 0, 0.40334, 0)

-- // StarterGui.Xeonware.Frame.Mains.Rage.antiaim.AntiAimType.UICorner \\ --
UI["25"] = Instance.new("UICorner", UI["24"])
UI["25"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Mains.Rage.antiaim.FakeLagToggle \\ --
UI["26"] = Instance.new("TextButton", UI["1f"])
UI["26"]["TextWrapped"] = true
UI["26"]["BorderSizePixel"] = 0
UI["26"]["TextSize"] = 14
UI["26"]["TextColor3"] = Color3.fromRGB(255, 0, 5)
UI["26"]["TextScaled"] = true
UI["26"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
UI["26"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["26"]["RichText"] = true
UI["26"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["26"]["Name"] = [[FakeLagToggle]]
UI["26"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["26"]["Text"] = [[FakeLag (OFF)]]
UI["26"]["Position"] = UDim2.new(0.08696, 0, 0.62964, 0)

-- // StarterGui.Xeonware.Frame.Mains.Rage.antiaim.FakeLagToggle.UICorner \\ --
UI["27"] = Instance.new("UICorner", UI["26"])
UI["27"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Mains.Legit \\ --
UI["28"] = Instance.new("Frame", UI["4"])
UI["28"]["Visible"] = false
UI["28"]["BorderSizePixel"] = 0
UI["28"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["28"]["Size"] = UDim2.new(0, 640, 0, 595)
UI["28"]["Position"] = UDim2.new(0.02239, 0, 0.02703, 0)
UI["28"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["28"]["Name"] = [[Legit]]
UI["28"]["BackgroundTransparency"] = 0.9

-- // StarterGui.Xeonware.Frame.Mains.Legit.Frame \\ --
UI["29"] = Instance.new("Frame", UI["28"])
UI["29"]["Visible"] = false
UI["29"]["BorderSizePixel"] = 0
UI["29"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["29"]["Size"] = UDim2.new(0, 388, 0, 313)
UI["29"]["Position"] = UDim2.new(0.025, 0, 0.03025, 0)
UI["29"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)

-- // StarterGui.Xeonware.Frame.Mains.Legit.Frame.UICorner \\ --
UI["2a"] = Instance.new("UICorner", UI["29"])
UI["2a"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Mains.Legit.Frame.aimbottext \\ --
UI["2b"] = Instance.new("TextLabel", UI["29"])
UI["2b"]["TextWrapped"] = true
UI["2b"]["BorderSizePixel"] = 0
UI["2b"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255)
UI["2b"]["TextScaled"] = true
UI["2b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["2b"]["TextSize"] = 14
UI["2b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["2b"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["2b"]["BackgroundTransparency"] = 1
UI["2b"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["2b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["2b"]["Text"] = [[AIMBOT Legit]]
UI["2b"]["Name"] = [[aimbottext]]
UI["2b"]["Position"] = UDim2.new(0.20361, 0, 0, 0)

-- // StarterGui.Xeonware.Frame.Mains.Legit.Frame.aimboton \\ --
UI["2c"] = Instance.new("TextButton", UI["29"])
UI["2c"]["TextWrapped"] = true
UI["2c"]["BorderSizePixel"] = 0
UI["2c"]["TextSize"] = 14
UI["2c"]["TextColor3"] = Color3.fromRGB(171, 0, 255)
UI["2c"]["TextScaled"] = true
UI["2c"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
UI["2c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["2c"]["RichText"] = true
UI["2c"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["2c"]["Name"] = [[aimboton]]
UI["2c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["2c"]["Text"] = [[AimBot ON]]
UI["2c"]["Position"] = UDim2.new(0.0567, 0, 0.22463, 0)

-- // StarterGui.Xeonware.Frame.Mains.Legit.Frame.aimboton.UICorner \\ --
UI["2d"] = Instance.new("UICorner", UI["2c"])
UI["2d"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Mains.Legit.Frame.aimboton.LocalScript \\ --
UI["2e"] = Instance.new("LocalScript", UI["2c"])


-- // StarterGui.Xeonware.Frame.Mains.Legit.Frame.aimbot_main \\ --
UI["2f"] = Instance.new("LocalScript", UI["29"])
UI["2f"]["Enabled"] = false
UI["2f"]["Name"] = [[aimbot_main]]
UI["2f"]["Disabled"] = true

-- // StarterGui.Xeonware.Frame.Mains.Legit.Frame.note \\ --
UI["30"] = Instance.new("TextLabel", UI["29"])
UI["30"]["TextWrapped"] = true
UI["30"]["BorderSizePixel"] = 0
UI["30"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255)
UI["30"]["TextScaled"] = true
UI["30"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["30"]["TextSize"] = 14
UI["30"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["30"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["30"]["BackgroundTransparency"] = 1
UI["30"]["Size"] = UDim2.new(0, 356, 0, 50)
UI["30"]["Visible"] = false
UI["30"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["30"]["Text"] = [[Aimbot on! Hold Mouse5 to use it]]
UI["30"]["Name"] = [[note]]
UI["30"]["Position"] = UDim2.new(0.04124, 0, 0.22364, 0)

-- // StarterGui.Xeonware.Frame.Mains.Legit.soon \\ --
UI["31"] = Instance.new("TextLabel", UI["28"])
UI["31"]["TextWrapped"] = true
UI["31"]["BorderSizePixel"] = 0
UI["31"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255)
UI["31"]["TextScaled"] = true
UI["31"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["31"]["TextSize"] = 14
UI["31"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["31"]["TextColor3"] = Color3.fromRGB(171, 0, 255)
UI["31"]["BackgroundTransparency"] = 1
UI["31"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["31"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["31"]["Text"] = [[Soon!]]
UI["31"]["Name"] = [[soon]]
UI["31"]["Position"] = UDim2.new(0.34375, 0, 0.4605, 0)

-- // StarterGui.Xeonware.Frame.Mains.Misc \\ --
UI["32"] = Instance.new("Frame", UI["4"])
UI["32"]["Visible"] = false
UI["32"]["BorderSizePixel"] = 0
UI["32"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["32"]["Size"] = UDim2.new(0, 640, 0, 595)
UI["32"]["Position"] = UDim2.new(0.02239, 0, 0.02703, 0)
UI["32"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["32"]["Name"] = [[Misc]]
UI["32"]["BackgroundTransparency"] = 0.9

-- // StarterGui.Xeonware.Frame.Mains.Misc.main \\ --
UI["33"] = Instance.new("Frame", UI["32"])
UI["33"]["BorderSizePixel"] = 3
UI["33"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["33"]["Size"] = UDim2.new(0, 350, 0, 350)
UI["33"]["Position"] = UDim2.new(0.02136, 0, 0.02227, 0)
UI["33"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["33"]["Name"] = [[main]]

-- // StarterGui.Xeonware.Frame.Mains.Misc.main.settings \\ --
UI["34"] = Instance.new("LocalScript", UI["33"])
UI["34"]["Name"] = [[settings]]

-- // StarterGui.Xeonware.Frame.Mains.Misc.main.walk \\ --
UI["35"] = Instance.new("TextButton", UI["33"])
UI["35"]["TextWrapped"] = true
UI["35"]["BorderSizePixel"] = 3
UI["35"]["TextSize"] = 14
UI["35"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["35"]["TextScaled"] = true
UI["35"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["35"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["35"]["Size"] = UDim2.new(0, 150, 0, 50)
UI["35"]["BackgroundTransparency"] = 0.5
UI["35"]["Name"] = [[walk]]
UI["35"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["35"]["Text"] = [[Set walkspeed]]
UI["35"]["Position"] = UDim2.new(0.04, 0, 0.26286, 0)

-- // StarterGui.Xeonware.Frame.Mains.Misc.main.walk.value \\ --
UI["36"] = Instance.new("TextBox", UI["35"])
UI["36"]["TextColor3"] = Color3.fromRGB(171, 0, 255)
UI["36"]["PlaceholderColor3"] = Color3.fromRGB(0, 171, 255)
UI["36"]["BorderSizePixel"] = 3
UI["36"]["TextWrapped"] = true
UI["36"]["TextSize"] = 14
UI["36"]["Name"] = [[value]]
UI["36"]["TextScaled"] = true
UI["36"]["BackgroundColor3"] = Color3.fromRGB(72, 72, 72)
UI["36"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["36"]["Size"] = UDim2.new(0, 150, 0, 50)
UI["36"]["Position"] = UDim2.new(0, 0, 1, 0)
UI["36"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["36"]["Text"] = [[150]]
UI["36"]["BackgroundTransparency"] = 0.5

-- // StarterGui.Xeonware.Frame.Mains.Misc.main.jump \\ --
UI["37"] = Instance.new("TextButton", UI["33"])
UI["37"]["TextWrapped"] = true
UI["37"]["BorderSizePixel"] = 3
UI["37"]["TextSize"] = 14
UI["37"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["37"]["TextScaled"] = true
UI["37"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["37"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["37"]["Size"] = UDim2.new(0, 150, 0, 50)
UI["37"]["BackgroundTransparency"] = 0.5
UI["37"]["Name"] = [[jump]]
UI["37"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["37"]["Text"] = [[Set jumpheight]]
UI["37"]["Position"] = UDim2.new(0.04, 0, 0.58286, 0)

-- // StarterGui.Xeonware.Frame.Mains.Misc.main.jump.value \\ --
UI["38"] = Instance.new("TextBox", UI["37"])
UI["38"]["TextColor3"] = Color3.fromRGB(171, 0, 255)
UI["38"]["PlaceholderColor3"] = Color3.fromRGB(171, 0, 255)
UI["38"]["BorderSizePixel"] = 3
UI["38"]["TextWrapped"] = true
UI["38"]["TextSize"] = 14
UI["38"]["Name"] = [[value]]
UI["38"]["TextScaled"] = true
UI["38"]["BackgroundColor3"] = Color3.fromRGB(72, 72, 72)
UI["38"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["38"]["Size"] = UDim2.new(0, 150, 0, 50)
UI["38"]["Position"] = UDim2.new(0, 0, 1, 0)
UI["38"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["38"]["Text"] = [[150]]
UI["38"]["BackgroundTransparency"] = 0.5

-- // StarterGui.Xeonware.Frame.Mains.Misc.main.UICorner \\ --
UI["39"] = Instance.new("UICorner", UI["33"])
UI["39"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Mains.Misc.main.soon \\ --
UI["3a"] = Instance.new("TextLabel", UI["33"])
UI["3a"]["TextWrapped"] = true
UI["3a"]["BorderSizePixel"] = 0
UI["3a"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255)
UI["3a"]["TextScaled"] = true
UI["3a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["3a"]["TextSize"] = 14
UI["3a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["3a"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["3a"]["BackgroundTransparency"] = 1
UI["3a"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["3a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["3a"]["Text"] = [[MISC]]
UI["3a"]["Name"] = [[soon]]
UI["3a"]["Position"] = UDim2.new(0.21232, 0, -0.00235, 0)

-- // StarterGui.Xeonware.Frame.Mains.Misc.main.bhop \\ --
UI["3b"] = Instance.new("LocalScript", UI["33"])
UI["3b"]["Name"] = [[bhop]]

-- // StarterGui.Xeonware.Frame.Mains.Misc.main.bhop_button \\ --
UI["3c"] = Instance.new("TextButton", UI["33"])
UI["3c"]["TextWrapped"] = true
UI["3c"]["BorderSizePixel"] = 3
UI["3c"]["TextSize"] = 14
UI["3c"]["TextColor3"] = Color3.fromRGB(0, 0, 0)
UI["3c"]["TextScaled"] = true
UI["3c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["3c"]["FontFace"] = Font.new([[rbxasset://fonts/families/ComicNeueAngular.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["3c"]["Size"] = UDim2.new(0, 150, 0, 50)
UI["3c"]["BackgroundTransparency"] = 0.5
UI["3c"]["Name"] = [[bhop_button]]
UI["3c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["3c"]["Text"] = [[CSGO BHOP]]
UI["3c"]["Position"] = UDim2.new(0.52857, 0, 0.26286, 0)

-- // StarterGui.Xeonware.Frame.Mains.Scripts \\ --
UI["3d"] = Instance.new("Frame", UI["4"])
UI["3d"]["BorderSizePixel"] = 0
UI["3d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["3d"]["Size"] = UDim2.new(0, 640, 0, 595)
UI["3d"]["Position"] = UDim2.new(0.02239, 0, 0.02703, 0)
UI["3d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["3d"]["Name"] = [[Scripts]]
UI["3d"]["BackgroundTransparency"] = 0.9

-- // StarterGui.Xeonware.Frame.Mains.Scripts.un \\ --
UI["3e"] = Instance.new("Frame", UI["3d"])
UI["3e"]["BorderSizePixel"] = 0
UI["3e"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["3e"]["Size"] = UDim2.new(0, 200, 0, 130)
UI["3e"]["Position"] = UDim2.new(0.02031, 0, 0.02185, 0)
UI["3e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["3e"]["Name"] = [[un]]

-- // StarterGui.Xeonware.Frame.Mains.Scripts.un.UICorner \\ --
UI["3f"] = Instance.new("UICorner", UI["3e"])
UI["3f"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Mains.Scripts.un.un \\ --
UI["40"] = Instance.new("TextButton", UI["3e"])
UI["40"]["TextWrapped"] = true
UI["40"]["BorderSizePixel"] = 0
UI["40"]["TextSize"] = 14
UI["40"]["TextColor3"] = Color3.fromRGB(171, 0, 255)
UI["40"]["TextScaled"] = true
UI["40"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
UI["40"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["40"]["RichText"] = true
UI["40"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["40"]["Name"] = [[un]]
UI["40"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["40"]["Text"] = [[Load]]
UI["40"]["Position"] = UDim2.new(0, 0, 0.61414, 0)

-- // StarterGui.Xeonware.Frame.Mains.Scripts.un.un.UICorner \\ --
UI["41"] = Instance.new("UICorner", UI["40"])
UI["41"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Mains.Scripts.un.un.LocalScript \\ --
UI["42"] = Instance.new("LocalScript", UI["40"])


-- // StarterGui.Xeonware.Frame.Mains.Scripts.un.TextLabel \\ --
UI["43"] = Instance.new("TextLabel", UI["3e"])
UI["43"]["TextWrapped"] = true
UI["43"]["BorderSizePixel"] = 0
UI["43"]["TextScaled"] = true
UI["43"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["43"]["TextSize"] = 14
UI["43"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal)
UI["43"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["43"]["BackgroundTransparency"] = 1
UI["43"]["RichText"] = true
UI["43"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["43"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["43"]["Text"] = [[UN Hub]]

-- // StarterGui.Xeonware.Frame.Mains.Credits \\ --
UI["44"] = Instance.new("Frame", UI["4"])
UI["44"]["Visible"] = false
UI["44"]["BorderSizePixel"] = 0
UI["44"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["44"]["Size"] = UDim2.new(0, 640, 0, 595)
UI["44"]["Position"] = UDim2.new(0.02239, 0, 0.02703, 0)
UI["44"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["44"]["Name"] = [[Credits]]
UI["44"]["BackgroundTransparency"] = 0.9

-- // StarterGui.Xeonware.Frame.Mains.Credits.xeonleon_credits \\ --
UI["45"] = Instance.new("TextLabel", UI["44"])
UI["45"]["TextWrapped"] = true
UI["45"]["BorderSizePixel"] = 0
UI["45"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255)
UI["45"]["TextScaled"] = true
UI["45"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["45"]["TextSize"] = 14
UI["45"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["45"]["TextColor3"] = Color3.fromRGB(171, 0, 255)
UI["45"]["BackgroundTransparency"] = 1
UI["45"]["RichText"] = true
UI["45"]["Size"] = UDim2.new(0, 365, 0, 50)
UI["45"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["45"]["Text"] = [[All made by XeonLeon]]
UI["45"]["Name"] = [[xeonleon_credits]]
UI["45"]["Position"] = UDim2.new(0.21406, 0, 0.46218, 0)

-- // StarterGui.Xeonware.Frame.Mains.Configs \\ --
UI["46"] = Instance.new("Frame", UI["4"])
UI["46"]["Visible"] = false
UI["46"]["BorderSizePixel"] = 0
UI["46"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["46"]["Size"] = UDim2.new(0, 640, 0, 595)
UI["46"]["Position"] = UDim2.new(0.02239, 0, 0.02703, 0)
UI["46"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["46"]["Name"] = [[Configs]]
UI["46"]["BackgroundTransparency"] = 0.9

-- // StarterGui.Xeonware.Frame.Mains.Configs.soon \\ --
UI["47"] = Instance.new("TextLabel", UI["46"])
UI["47"]["TextWrapped"] = true
UI["47"]["BorderSizePixel"] = 0
UI["47"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255)
UI["47"]["TextScaled"] = true
UI["47"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["47"]["TextSize"] = 14
UI["47"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["47"]["TextColor3"] = Color3.fromRGB(171, 0, 255)
UI["47"]["BackgroundTransparency"] = 1
UI["47"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["47"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["47"]["Text"] = [[Soon!]]
UI["47"]["Name"] = [[soon]]
UI["47"]["Position"] = UDim2.new(0.34375, 0, 0.4605, 0)

-- // StarterGui.Xeonware.Frame.Mains.Welcome \\ --
UI["48"] = Instance.new("Frame", UI["4"])
UI["48"]["Visible"] = false
UI["48"]["BorderSizePixel"] = 0
UI["48"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["48"]["Size"] = UDim2.new(0, 640, 0, 595)
UI["48"]["Position"] = UDim2.new(0.02239, 0, 0.02703, 0)
UI["48"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["48"]["Name"] = [[Welcome]]
UI["48"]["BackgroundTransparency"] = 0.9

-- // StarterGui.Xeonware.Frame.Mains.Welcome.xeonware \\ --
UI["49"] = Instance.new("TextLabel", UI["48"])
UI["49"]["TextWrapped"] = true
UI["49"]["BorderSizePixel"] = 0
UI["49"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255)
UI["49"]["TextScaled"] = true
UI["49"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["49"]["TextSize"] = 14
UI["49"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["49"]["TextColor3"] = Color3.fromRGB(171, 0, 255)
UI["49"]["BackgroundTransparency"] = 1
UI["49"]["Size"] = UDim2.new(0, 358, 0, 112)
UI["49"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["49"]["Text"] = [[XeonWare]]
UI["49"]["Name"] = [[xeonware]]
UI["49"]["Position"] = UDim2.new(0.20313, 0, 0.01513, 0)

-- // StarterGui.Xeonware.Frame.Mains.Welcome.xeonware \\ --
UI["4a"] = Instance.new("TextLabel", UI["48"])
UI["4a"]["TextWrapped"] = true
UI["4a"]["BorderSizePixel"] = 0
UI["4a"]["AutoLocalize"] = false
UI["4a"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255)
UI["4a"]["TextScaled"] = true
UI["4a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["4a"]["TextSize"] = 14
UI["4a"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["4a"]["TextColor3"] = Color3.fromRGB(171, 0, 255)
UI["4a"]["BackgroundTransparency"] = 1
UI["4a"]["Size"] = UDim2.new(0, 558, 0, 112)
UI["4a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["4a"]["Text"] = [[Welcome to Xeonware]]
UI["4a"]["Name"] = [[xeonware]]
UI["4a"]["Position"] = UDim2.new(0.0625, 0, 0.42017, 0)

-- // StarterGui.Xeonware.Frame.Mains.Welcome.xeonwarebeta \\ --
UI["4b"] = Instance.new("TextLabel", UI["48"])
UI["4b"]["TextWrapped"] = true
UI["4b"]["BorderSizePixel"] = 0
UI["4b"]["AutoLocalize"] = false
UI["4b"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255)
UI["4b"]["TextScaled"] = true
UI["4b"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["4b"]["TextSize"] = 14
UI["4b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["4b"]["TextColor3"] = Color3.fromRGB(255, 0, 5)
UI["4b"]["BackgroundTransparency"] = 1
UI["4b"]["Size"] = UDim2.new(0, 174, 0, 23)
UI["4b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["4b"]["Text"] = [[Beta]]
UI["4b"]["Name"] = [[xeonwarebeta]]
UI["4b"]["Position"] = UDim2.new(0.81875, 0, 0.54118, 0)

-- // StarterGui.Xeonware.Frame.Mains.Welcome.xeonwaredev \\ --
UI["4c"] = Instance.new("TextLabel", UI["48"])
UI["4c"]["TextWrapped"] = true
UI["4c"]["BorderSizePixel"] = 0
UI["4c"]["AutoLocalize"] = false
UI["4c"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255)
UI["4c"]["TextScaled"] = true
UI["4c"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["4c"]["TextSize"] = 14
UI["4c"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["4c"]["TextColor3"] = Color3.fromRGB(0, 255, 255)
UI["4c"]["BackgroundTransparency"] = 1
UI["4c"]["Size"] = UDim2.new(0, 174, 0, 23)
UI["4c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["4c"]["Text"] = [[Dev]]
UI["4c"]["Name"] = [[xeonwaredev]]
UI["4c"]["Position"] = UDim2.new(0.81875, 0, 0.56807, 0)

-- // StarterGui.Xeonware.Frame.Mains.Template \\ --
UI["4d"] = Instance.new("Frame", UI["4"])
UI["4d"]["Visible"] = false
UI["4d"]["BorderSizePixel"] = 0
UI["4d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["4d"]["Size"] = UDim2.new(0, 640, 0, 595)
UI["4d"]["Position"] = UDim2.new(0.02239, 0, 0.02703, 0)
UI["4d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["4d"]["Name"] = [[Template]]
UI["4d"]["BackgroundTransparency"] = 0.9

-- // StarterGui.Xeonware.Frame.Buttons \\ --
UI["4e"] = Instance.new("Frame", UI["2"])
UI["4e"]["BorderSizePixel"] = 0
UI["4e"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["4e"]["Size"] = UDim2.new(0, 200, 0, 642)
UI["4e"]["Position"] = UDim2.new(0.00901, 0, 0.01051, 0)
UI["4e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["4e"]["Name"] = [[Buttons]]

-- // StarterGui.Xeonware.Frame.Buttons.UICorner \\ --
UI["4f"] = Instance.new("UICorner", UI["4e"])
UI["4f"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Buttons.rage_button \\ --
UI["50"] = Instance.new("TextButton", UI["4e"])
UI["50"]["TextWrapped"] = true
UI["50"]["BorderSizePixel"] = 0
UI["50"]["TextSize"] = 14
UI["50"]["TextColor3"] = Color3.fromRGB(171, 0, 255)
UI["50"]["TextScaled"] = true
UI["50"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
UI["50"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["50"]["RichText"] = true
UI["50"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["50"]["Name"] = [[rage_button]]
UI["50"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["50"]["Text"] = [[Rage]]
UI["50"]["Position"] = UDim2.new(0, 0, 0.1324, 0)

-- // StarterGui.Xeonware.Frame.Buttons.rage_button.UICorner \\ --
UI["51"] = Instance.new("UICorner", UI["50"])
UI["51"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Buttons.xeonware \\ --
UI["52"] = Instance.new("TextLabel", UI["4e"])
UI["52"]["TextWrapped"] = true
UI["52"]["BorderSizePixel"] = 0
UI["52"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255)
UI["52"]["TextScaled"] = true
UI["52"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["52"]["TextSize"] = 14
UI["52"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["52"]["TextColor3"] = Color3.fromRGB(171, 0, 255)
UI["52"]["BackgroundTransparency"] = 1
UI["52"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["52"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["52"]["Text"] = [[XeonWare]]
UI["52"]["Name"] = [[xeonware]]

-- // StarterGui.Xeonware.Frame.Buttons.legit_button \\ --
UI["53"] = Instance.new("TextButton", UI["4e"])
UI["53"]["TextWrapped"] = true
UI["53"]["BorderSizePixel"] = 0
UI["53"]["TextSize"] = 37
UI["53"]["TextColor3"] = Color3.fromRGB(171, 0, 255)
UI["53"]["TextScaled"] = true
UI["53"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
UI["53"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["53"]["RichText"] = true
UI["53"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["53"]["Name"] = [[legit_button]]
UI["53"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["53"]["Text"] = [[Legit]]
UI["53"]["Position"] = UDim2.new(0, 0, 0.23832, 0)

-- // StarterGui.Xeonware.Frame.Buttons.legit_button.UICorner \\ --
UI["54"] = Instance.new("UICorner", UI["53"])
UI["54"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Buttons.visuals_button \\ --
UI["55"] = Instance.new("TextButton", UI["4e"])
UI["55"]["TextWrapped"] = true
UI["55"]["BorderSizePixel"] = 0
UI["55"]["TextSize"] = 40
UI["55"]["TextColor3"] = Color3.fromRGB(171, 0, 255)
UI["55"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
UI["55"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["55"]["RichText"] = true
UI["55"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["55"]["Name"] = [[visuals_button]]
UI["55"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["55"]["Text"] = [[Visuals]]
UI["55"]["Position"] = UDim2.new(0, 0, 0.34579, 0)

-- // StarterGui.Xeonware.Frame.Buttons.visuals_button.UICorner \\ --
UI["56"] = Instance.new("UICorner", UI["55"])
UI["56"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Buttons.misc_button \\ --
UI["57"] = Instance.new("TextButton", UI["4e"])
UI["57"]["TextWrapped"] = true
UI["57"]["BorderSizePixel"] = 0
UI["57"]["TextSize"] = 14
UI["57"]["TextColor3"] = Color3.fromRGB(171, 0, 255)
UI["57"]["TextScaled"] = true
UI["57"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
UI["57"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["57"]["RichText"] = true
UI["57"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["57"]["Name"] = [[misc_button]]
UI["57"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["57"]["Text"] = [[Misc]]
UI["57"]["Position"] = UDim2.new(0, 0, 0.46106, 0)

-- // StarterGui.Xeonware.Frame.Buttons.misc_button.UICorner \\ --
UI["58"] = Instance.new("UICorner", UI["57"])
UI["58"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Buttons.credits_button \\ --
UI["59"] = Instance.new("TextButton", UI["4e"])
UI["59"]["TextWrapped"] = true
UI["59"]["BorderSizePixel"] = 0
UI["59"]["TextSize"] = 14
UI["59"]["TextColor3"] = Color3.fromRGB(171, 0, 255)
UI["59"]["TextScaled"] = true
UI["59"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
UI["59"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["59"]["RichText"] = true
UI["59"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["59"]["Name"] = [[credits_button]]
UI["59"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["59"]["Text"] = [[Credits]]
UI["59"]["Position"] = UDim2.new(0, 0, 0.78505, 0)

-- // StarterGui.Xeonware.Frame.Buttons.credits_button.UICorner \\ --
UI["5a"] = Instance.new("UICorner", UI["59"])
UI["5a"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Buttons.scripts_button \\ --
UI["5b"] = Instance.new("TextButton", UI["4e"])
UI["5b"]["TextWrapped"] = true
UI["5b"]["BorderSizePixel"] = 0
UI["5b"]["TextSize"] = 14
UI["5b"]["TextColor3"] = Color3.fromRGB(171, 0, 255)
UI["5b"]["TextScaled"] = true
UI["5b"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
UI["5b"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["5b"]["RichText"] = true
UI["5b"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["5b"]["Name"] = [[scripts_button]]
UI["5b"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["5b"]["Text"] = [[Scripts]]
UI["5b"]["Position"] = UDim2.new(0, 0, 0.62928, 0)

-- // StarterGui.Xeonware.Frame.Buttons.scripts_button.UICorner \\ --
UI["5c"] = Instance.new("UICorner", UI["5b"])
UI["5c"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Buttons.LocalScript \\ --
UI["5d"] = Instance.new("LocalScript", UI["4e"])


-- // StarterGui.Xeonware.Frame.Buttons.ImageLabel \\ --
UI["5e"] = Instance.new("ImageLabel", UI["4e"])
UI["5e"]["BorderSizePixel"] = 0
UI["5e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["5e"]["Image"] = [[rbxassetid://73118361864874]]
UI["5e"]["Size"] = UDim2.new(0, 30, 0, 30)
UI["5e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["5e"]["BackgroundTransparency"] = 1
UI["5e"]["Position"] = UDim2.new(0.03, 0, 0.016, 0)

-- // StarterGui.Xeonware.Frame.Buttons.ImageLabel.LocalScript \\ --
UI["5f"] = Instance.new("LocalScript", UI["5e"])


-- // StarterGui.Xeonware.Frame.Buttons.xeonwarebeta \\ --
UI["60"] = Instance.new("TextLabel", UI["4e"])
UI["60"]["TextWrapped"] = true
UI["60"]["BorderSizePixel"] = 0
UI["60"]["AutoLocalize"] = false
UI["60"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255)
UI["60"]["TextScaled"] = true
UI["60"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["60"]["TextSize"] = 14
UI["60"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["60"]["TextColor3"] = Color3.fromRGB(255, 0, 5)
UI["60"]["BackgroundTransparency"] = 1
UI["60"]["Size"] = UDim2.new(0, 174, 0, 23)
UI["60"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["60"]["Text"] = [[Beta]]
UI["60"]["Name"] = [[xeonwarebeta]]
UI["60"]["Position"] = UDim2.new(0.44531, 0, 0.05527, 0)

-- // StarterGui.Xeonware.Frame.Buttons.xeonwaredev \\ --
UI["61"] = Instance.new("TextLabel", UI["4e"])
UI["61"]["TextWrapped"] = true
UI["61"]["BorderSizePixel"] = 0
UI["61"]["AutoLocalize"] = false
UI["61"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255)
UI["61"]["TextScaled"] = true
UI["61"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["61"]["TextSize"] = 14
UI["61"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["61"]["TextColor3"] = Color3.fromRGB(0, 255, 255)
UI["61"]["BackgroundTransparency"] = 1
UI["61"]["Size"] = UDim2.new(0, 174, 0, 23)
UI["61"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["61"]["Text"] = [[Dev]]
UI["61"]["Name"] = [[xeonwaredev]]
UI["61"]["Position"] = UDim2.new(0.44375, 0, 0.07741, 0)

-- // StarterGui.Xeonware.Frame.Buttons.config_button \\ --
UI["62"] = Instance.new("TextButton", UI["4e"])
UI["62"]["TextWrapped"] = true
UI["62"]["BorderSizePixel"] = 0
UI["62"]["TextSize"] = 14
UI["62"]["TextColor3"] = Color3.fromRGB(171, 0, 255)
UI["62"]["TextScaled"] = true
UI["62"]["BackgroundColor3"] = Color3.fromRGB(34, 34, 34)
UI["62"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["62"]["RichText"] = true
UI["62"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["62"]["Name"] = [[config_button]]
UI["62"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["62"]["Text"] = [[Configs]]
UI["62"]["Position"] = UDim2.new(0, 0, 0.89875, 0)

-- // StarterGui.Xeonware.Frame.Buttons.config_button.UICorner \\ --
UI["63"] = Instance.new("UICorner", UI["62"])
UI["63"]["CornerRadius"] = UDim.new(0, 10)

-- // StarterGui.Xeonware.Frame.Buttons.welcome \\ --
UI["64"] = Instance.new("LocalScript", UI["4e"])
UI["64"]["Name"] = [[welcome]]

-- // StarterGui.Xeonware.Frame.drag \\ --
UI["65"] = Instance.new("LocalScript", UI["2"])
UI["65"]["Name"] = [[drag]]

-- // StarterGui.Xeonware.Frame.ImageLabel \\ --
UI["66"] = Instance.new("ImageLabel", UI["2"])
UI["66"]["BorderSizePixel"] = 0
UI["66"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["66"]["ImageColor3"] = Color3.fromRGB(171, 0, 255)
UI["66"]["Image"] = [[rbxassetid://73118361864874]]
UI["66"]["Size"] = UDim2.new(0, 30, 0, 30)
UI["66"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["66"]["BackgroundTransparency"] = 1
UI["66"]["Position"] = UDim2.new(0.01554, 0, 0.02513, 0)

-- // StarterGui.Xeonware.Frame.ImageLabel.LocalScript \\ --
UI["67"] = Instance.new("LocalScript", UI["66"])


-- // StarterGui.Xeonware.Frame.ImageLabel.LocalScript \\ --
UI["68"] = Instance.new("LocalScript", UI["66"])


-- // StarterGui.Xeonware.Frame.nofiticationsystem \\ --
UI["69"] = Instance.new("LocalScript", UI["2"])
UI["69"]["Name"] = [[nofiticationsystem]]

-- // StarterGui.Xeonware.Frame.minza \\ --
UI["6a"] = Instance.new("TextButton", UI["2"])
UI["6a"]["TextWrapped"] = true
UI["6a"]["Active"] = false
UI["6a"]["BorderSizePixel"] = 0
UI["6a"]["TextSize"] = 14
UI["6a"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["6a"]["TextScaled"] = true
UI["6a"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["6a"]["FontFace"] = Font.new([[rbxasset://fonts/families/DenkOne.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["6a"]["Size"] = UDim2.new(0, 33, 0, 50)
UI["6a"]["BackgroundTransparency"] = 1
UI["6a"]["Name"] = [[minza]]
UI["6a"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["6a"]["Text"] = [[X]]
UI["6a"]["Position"] = UDim2.new(0.96774, 0, -0.00457, 0)

-- // StarterGui.Xeonware.controls \\ --
UI["6b"] = Instance.new("LocalScript", UI["1"])
UI["6b"]["Name"] = [[controls]]

-- // StarterGui.Xeonware.minframe \\ --
UI["6c"] = Instance.new("Frame", UI["1"])
UI["6c"]["Visible"] = false
UI["6c"]["BorderSizePixel"] = 0
UI["6c"]["BackgroundColor3"] = Color3.fromRGB(0, 0, 0)
UI["6c"]["Size"] = UDim2.new(0, 199, 0, 65)
UI["6c"]["Position"] = UDim2.new(0.00779, 0, 0.44574, 0)
UI["6c"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["6c"]["Name"] = [[minframe]]

-- // StarterGui.Xeonware.minframe.xeonware \\ --
UI["6d"] = Instance.new("TextLabel", UI["6c"])
UI["6d"]["TextWrapped"] = true
UI["6d"]["BorderSizePixel"] = 0
UI["6d"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255)
UI["6d"]["TextScaled"] = true
UI["6d"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["6d"]["TextSize"] = 14
UI["6d"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["6d"]["TextColor3"] = Color3.fromRGB(171, 0, 255)
UI["6d"]["BackgroundTransparency"] = 1
UI["6d"]["Size"] = UDim2.new(0, 200, 0, 50)
UI["6d"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["6d"]["Text"] = [[XeonWare]]
UI["6d"]["Name"] = [[xeonware]]
UI["6d"]["Position"] = UDim2.new(-0.00503, 0, 0.26154, 0)

-- // StarterGui.Xeonware.minframe.unmiza \\ --
UI["6e"] = Instance.new("TextButton", UI["6c"])
UI["6e"]["TextWrapped"] = true
UI["6e"]["Active"] = false
UI["6e"]["BorderSizePixel"] = 0
UI["6e"]["TextSize"] = 14
UI["6e"]["TextColor3"] = Color3.fromRGB(255, 255, 255)
UI["6e"]["TextScaled"] = true
UI["6e"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["6e"]["FontFace"] = Font.new([[rbxasset://fonts/families/DenkOne.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["6e"]["Size"] = UDim2.new(0, 33, 0, 35)
UI["6e"]["BackgroundTransparency"] = 1
UI["6e"]["Name"] = [[unmiza]]
UI["6e"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["6e"]["Text"] = [[O]]
UI["6e"]["Position"] = UDim2.new(0.83206, 0, 0, 0)

-- // StarterGui.Xeonware.minframe.drag \\ --
UI["6f"] = Instance.new("LocalScript", UI["6c"])
UI["6f"]["Name"] = [[drag]]

-- // StarterGui.Xeonware.minframe.xeonwarebeta \\ --
UI["70"] = Instance.new("TextLabel", UI["6c"])
UI["70"]["TextWrapped"] = true
UI["70"]["BorderSizePixel"] = 0
UI["70"]["AutoLocalize"] = false
UI["70"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255)
UI["70"]["TextScaled"] = true
UI["70"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["70"]["TextSize"] = 14
UI["70"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["70"]["TextColor3"] = Color3.fromRGB(255, 0, 5)
UI["70"]["BackgroundTransparency"] = 1
UI["70"]["Size"] = UDim2.new(0, 174, 0, 23)
UI["70"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["70"]["Text"] = [[Beta]]
UI["70"]["Name"] = [[xeonwarebeta]]
UI["70"]["Position"] = UDim2.new(-0.33358, 0, 0.08604, 0)

-- // StarterGui.Xeonware.minframe.xeonwaredev \\ --
UI["71"] = Instance.new("TextLabel", UI["6c"])
UI["71"]["TextWrapped"] = true
UI["71"]["BorderSizePixel"] = 0
UI["71"]["AutoLocalize"] = false
UI["71"]["TextStrokeColor3"] = Color3.fromRGB(255, 255, 255)
UI["71"]["TextScaled"] = true
UI["71"]["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
UI["71"]["TextSize"] = 14
UI["71"]["FontFace"] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal)
UI["71"]["TextColor3"] = Color3.fromRGB(0, 255, 255)
UI["71"]["BackgroundTransparency"] = 1
UI["71"]["Size"] = UDim2.new(0, 35, 0, 23)
UI["71"]["BorderColor3"] = Color3.fromRGB(0, 0, 0)
UI["71"]["Text"] = [[Dev]]
UI["71"]["Name"] = [[xeonwaredev]]
UI["71"]["Position"] = UDim2.new(0.20757, 0, 0.07741, 0)

-- // StarterGui.Xeonware.Frame.Mains.Visuals.main.ESP.LocalScript \\ --
local function SCRIPT_d()
local script = UI["d"]
	local on = script.Parent.ON
	local off = script.Parent.OFF
	
	on.MouseButton1Click:Connect(function()
		on.Visible = false
		off.Visible = true
	end)
	
	off.MouseButton1Click:Connect(function()
		off.Visible = false
		on .Visible = true
	end)
	
end
task.spawn(SCRIPT_d)
-- // StarterGui.Xeonware.Frame.Mains.Visuals.main.settings \\ --
local function SCRIPT_10()
local script = UI["10"]
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local LocalPlayer = Players.LocalPlayer -- Get the local player
	
	print("ESP Script Started") -- Debug print
	
	-- Changed from FindFirstChild as requested.
	-- WARNING: This will cause an error if "ESP" is not a direct child of script.Parent when the script runs.
	local espLabel = script.Parent.ESP
	local onButton = espLabel:FindFirstChild("ON")
	local offButton = espLabel:FindFirstChild("OFF")
	
	if not espLabel then print("Error: 'ESP' object not found under script.Parent!") return end -- Check if ESP was found after direct access
	if not onButton then print("Error: 'ON' button not found under ESP!") return end
	if not offButton then print("Error: 'OFF' button not found under ESP!") return end
	
	print("UI elements found.") -- Debug print
	
	local espEnabled = false
	local espSelfEnabled = false -- New variable to toggle ESP on self
	
	-- Connections table will now manage PlayerAdded and CharacterAdded connections
	local activeConnections = {}
	
	-- Removed: Creation of nearestPlayerBillboard and indicatorImage
	
	-- Removed: Parent the BillboardGui to the PlayerGui section
	
	-- Function to create ESP elements for a character
	local function createESPForCharacter(character)
		print("Attempting to create ESP for character:", character.Name) -- Debug print
	
		-- Ensure the character has a HumanoidRootPart
		local rootPart = character:FindFirstChild("HumanoidRootPart")
		if not rootPart then
			print("Waiting for HumanoidRootPart for", character.Name) -- Debug print
			rootPart = character:WaitForChild("HumanoidRootPart", 5) -- Wait a bit for it
			if not rootPart then
				print("HumanoidRootPart not found for", character.Name, "after waiting.") -- Debug print
				return
			end
			print("HumanoidRootPart found for", character.Name) -- Debug print
		end
	
		-- Clean up existing ESP elements if they somehow exist
		if character:FindFirstChild("ESPHighlight") then character.ESPHighlight:Destroy() end
		-- Removed: if character:FindFirstChild("ESPBox") then character.ESPBox:Destroy() end
		if character:FindFirstChild("ESPName") then character.ESPName:Destroy() end
		-- Removed: if character:FindFirstChild("ESPLine") then character.ESPLine:Destroy() end
	
		-- Create the Highlight (optional, but kept from original)
		local highlight = Instance.new("Highlight")
		highlight.Name = "ESPHighlight"
		highlight.FillColor = Color3.new(1, 0, 0) -- Red fill
		highlight.FillTransparency = 0.5
		highlight.OutlineColor = Color3.new(1, 1, 1) -- White outline
		highlight.OutlineTransparency = 0
		highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop -- Make it visible through parts
		highlight.Parent = character
		print("Highlight created for", character.Name) -- Debug print
	
		-- Removed: Box Adornment creation
	
		-- Create the TextLabel for the name
		local nameBillboard = Instance.new("BillboardGui")
		nameBillboard.Name = "ESPName"
		nameBillboard.Adornee = rootPart -- Adorn the HumanoidRootPart
		nameBillboard.Size = UDim2.new(0, 150, 0, 20) -- Size in pixels
		nameBillboard.AlwaysOnTop = true
		nameBillboard.ExtentsOffset = Vector3.new(0, character.Humanoid.HipHeight + 1, 0) -- Position above the character
	
		local nameLabel = Instance.new("TextLabel")
		nameLabel.Size = UDim2.new(1, 0, 1, 0)
		nameLabel.BackgroundTransparency = 1
		nameLabel.TextScaled = true
		nameLabel.TextColor3 = Color3.new(1, 1, 1) -- White text
		nameLabel.TextStrokeColor3 = Color3.new(0, 0, 0) -- Black outline
		nameLabel.TextStrokeTransparency = 0
		nameLabel.Font = Enum.Font.SourceSansBold
	
		-- Corrected line to get player name using standard Lua checks
		local player = Players:GetPlayerFromCharacter(character)
		nameLabel.Text = player and (player.DisplayName or player.Name) or "Player" -- Get player name or display name
	
		nameLabel.Parent = nameBillboard
		nameBillboard.Parent = character
		print("Name BillboardGui created for", character.Name, "with text:", nameLabel.Text) -- Debug print
	
		-- Removed: Line Adornment creation and per-character RenderStepped connection
	end
	
	-- Function to handle a player joining or character spawning
	local function handlePlayer(player)
		print("Handling player:", player.Name) -- Debug print
		-- Ignore the local player UNLESS espSelfEnabled is true
		if player == LocalPlayer and not espSelfEnabled then
			print("Ignoring local player:", player.Name, " (self ESP disabled)") -- Debug print
			return
		end
	
		-- Connect to CharacterAdded for this player
		local charAddedConnection = player.CharacterAdded:Connect(function(character)
			print("CharacterAdded fired for", player.Name) -- Debug print
			if espEnabled then
				createESPForCharacter(character)
			end
		end)
		table.insert(activeConnections, charAddedConnection) -- Store connection
		print("CharacterAdded connection stored for", player.Name) -- Debug print
	
	
		-- If the character already exists and ESP is enabled, create ESP now
		if player.Character and espEnabled then
			print("Player", player.Name, "already has a character and ESP is enabled. Creating ESP.") -- Debug print
			createESPForCharacter(player.Character)
		end
	end
	
	-- Function to remove ESP elements from a character
	local function removeESPFromCharacter(character)
		print("Removing ESP from character:", character.Name) -- Debug print
		if character then
			local highlight = character:FindFirstChild("ESPHighlight")
			if highlight then highlight:Destroy() end
			local box = character:FindFirstChild("ESPBox") -- Still check for box to clean up old ones
			if box then box:Destroy() end
			local name = character:FindFirstChild("ESPName")
			if name then name:Destroy() end
			-- Removed: local line = character:FindFirstChild("ESPLine")
			-- Removed: if line then line:Destroy() end
		end
	end
	
	-- Removed: findNearestPlayer function
	
	-- Removed: Global RenderStepped connection for updating the nearest player indicator
	
	-- Function to toggle ESP state
	local function toggleESP(state)
		espEnabled = state
		print("Toggling ESP state to:", espEnabled) -- Debug print
	
		if espEnabled then
			print("ESP Enabled.") -- Debug print
			-- Disconnect any old PlayerAdded or CharacterAdded connections before adding new ones
			for i = #activeConnections, 1, -1 do
				if activeConnections[i].Connected then
					activeConnections[i]:Disconnect()
					print("Disconnected old connection.") -- Debug print
				end
				table.remove(activeConnections, i)
			end
			activeConnections = {} -- Clear the table definitively
	
			-- Handle players already in the game
			for _, player in ipairs(Players:GetPlayers()) do
				handlePlayer(player)
			end
			print("Handled existing players.") -- Debug print
	
			-- Connect to PlayerAdded for new players
			local playerAddedConnection = Players.PlayerAdded:Connect(handlePlayer)
			table.insert(activeConnections, playerAddedConnection)
			print("PlayerAdded connection added.") -- Debug print
	
		else
			print("ESP Disabled.") -- Debug print
			-- Remove ESP from all characters
			for _, player in ipairs(Players:GetPlayers()) do
				if player.Character then
					removeESPFromCharacter(player.Character)
				end
			end
			print("Removed ESP from all characters.") -- Debug print
	
			-- Disconnect PlayerAdded and CharacterAdded connections
			for _, connection in ipairs(activeConnections) do
				if connection.Connected then
					connection:Disconnect()
					print("Disconnected connection during disable.") -- Debug print
				end
			end
			activeConnections = {} -- Clear the table
	
			print("Player/Character connections disconnected.") -- Debug print
		end
	end
	
	-- Connect UI buttons to toggleESP function
	onButton.MouseButton1Click:Connect(function()
		print("ON button clicked.") -- Debug print
		toggleESP(true)
	end)
	
	offButton.MouseButton1Click:Connect(function()
		print("OFF button clicked.") -- Debug print
		toggleESP(false)
	end)
	
	-- You need a way to toggle espSelfEnabled.
	-- For now, let's add a simple example of how you might toggle it,
	-- assuming you have another button or input method.
	-- Example: You could add a third button named "SELF" under ESP.
	local selfButton = espLabel:FindFirstChild("SELF")
	if selfButton then
		selfButton.MouseButton1Click:Connect(function()
			espSelfEnabled = not espSelfEnabled -- Toggle the state
			print("Self ESP toggled to:", espSelfEnabled) -- Debug print
			-- When toggling self ESP, re-run handlePlayer for the local player
			-- to potentially add/remove ESP elements on self immediately.
			handlePlayer(LocalPlayer)
		end)
		print("'SELF' button found and connected.") -- Debug print
	else
		print("Warning: 'SELF' button not found under ESP. Self ESP toggle not available via UI.") -- Debug print
	end
	
	
	-- Initial check in case the script starts while players are already in the game
	-- This will be handled by the toggleESP(true) call if ESP starts enabled,
	-- but it's good practice to have the handlePlayer logic ready.
	-- We don't call toggleESP(false) here as the default state is false.
	
	-- Clean up connections and instances when the script is destroyed
	script.AncestryChanged:Connect(function()
		if not script.Parent then -- Script is being destroyed
			print("Script is being destroyed. Cleaning up.") -- Debug print
			-- Disconnect PlayerAdded and CharacterAdded connections
			for _, connection in ipairs(activeConnections) do
				if connection.Connected then
					connection:Disconnect()
				end
			end
			activeConnections = {}
	
			-- Removed: Disconnect the nearest indicator update connection
	
			-- Removed: Destroy the nearest player indicator BillboardGui
	
			-- Also clean up ESP elements from characters just in case
			for _, player in ipairs(Players:GetPlayers()) do
				if player.Character then
					removeESPFromCharacter(player.Character)
				end
			end
			print("Cleanup complete.") -- Debug print
		end
	end)
	
end
task.spawn(SCRIPT_10)
-- // StarterGui.Xeonware.Frame.Mains.Rage.main \\ --
local function SCRIPT_1e()
local script = UI["1e"]
	--!strict
	local Players = game:GetService("Players")
	local LocalPlayer = Players.LocalPlayer
	local RunService = game:GetService("RunService")
	local Workspace = game:GetService("Workspace")
	
	print("Script started running!")
	
	-- --- GUI Element References ---
	-- Assuming this script is located inside the "Rage" frame, named "main"
	local RageFrame = script.Parent
	
	-- Find the child frames within Rage
	local AntiAimFrame = nil
	if RageFrame and RageFrame.Parent then
		AntiAimFrame = RageFrame:FindFirstChild("antiaim") -- Use FindFirstChild for safety
	end
	
	local RagebotFrame = nil
	if RageFrame then
		RagebotFrame = RageFrame:FindFirstChild("ragebot") -- Now a direct child
	end
	
	
	-- Find buttons within the ragebot frame
	local ToggleRagebotButton = nil
	local AutoFireToggleButton = nil
	
	if RagebotFrame then
		ToggleRagebotButton = RagebotFrame:FindFirstChild("ToggleRagebot")
		if ToggleRagebotButton then print("Found ToggleRagebotButton") else warn("ToggleRagebotButton not found!") end
	
		AutoFireToggleButton = RagebotFrame:FindFirstChild("AutoFireToggle")
		if AutoFireToggleButton then print("Found AutoFireToggleButton") else warn("AutoFireToggleButton not found!") end
	else
		warn("Ragebot Frame not found! Check path: RageFrame:FindFirstChild('ragebot')")
	end
	
	-- Find buttons within the antiaim frame
	local AntiAimToggleButton = nil
	local AntiAimTypeButton = nil
	local FakeLagToggleButton = nil
	
	if AntiAimFrame then
		AntiAimToggleButton = AntiAimFrame:FindFirstChild("AntiAimToggle")
		if AntiAimToggleButton then print("Found AntiAimToggleButton") else warn("AntiAimToggleButton not found!") end
	
		AntiAimTypeButton = AntiAimFrame:FindFirstChild("AntiAimType") -- Assuming this is a button or has text
		if AntiAimTypeButton then print("Found AntiAimTypeButton") else warn("AntiAimTypeButton not found!") end
	
		-- Corrected typo here: Changed AntiLagToggleButton to AntiAimFrame
		FakeLagToggleButton = AntiAimFrame:FindFirstChild("FakeLagToggle")
		if FakeLagToggleButton then print("Found FakeLagToggleButton") else warn("FakeLagToggleButton not found!") end
	else
		warn("Anti-Aim Frame not found! Check path: RageFrame:FindFirstChild('antiaim')")
	end
	
	
	-- --- Configuration / Settings ---
	local RagebotEnabled = false
	local AutoFireEnabled = false
	local AntiAimEnabled = false
	local FakeLagEnabled = false
	local AntiAimType = "Basic" -- Default type, controlled by AntiAimType button later
	local AntiAimHeadPitch = math.rad(80) -- Angle in radians to pitch the head down (80 degrees)
	
	-- Fake Lag visual snap settings
	local FakeLagAnchorDuration = 0.5 -- Duration in seconds the root part is anchored for the snap
	local FakeLagSnapInterval = 0.5 -- Interval in seconds between visual snaps
	local FakeLagWalkSpeedMultiplier = 3 -- Multiplier for walk speed when Fake Lag is on (e.g., 3x normal speed)
	
	
	local AimbotTargetPart = "Head" -- Part to aim at
	local AimbotSensitivity = 1 -- How quickly it snaps/moves (1 is instant snap)
	local AimbotFOV = 90 -- Field of View for targeting (degrees) - only target players within this angle from look vector
	
	-- --- State variables ---
	local CurrentAimbotTarget = nil
	local CoreLogicConnection = nil -- Use one connection for all enabled features (Heartbeat)
	local FakeLagLoopConnection = nil -- Connection for the Fake Lag visual snap loop
	local ChamsApplied = {} -- Table to track which players have chams applied {player = highlightInstance}
	
	-- Reference to the local player's Neck joint and Animation script
	local LocalPlayerNeckJoint = nil
	local InitialNeckC0 = nil -- Store initial C0 for R6 reset
	local InitialNeckC1 = nil -- Store initial C1 for R15 reset
	local LocalPlayerAnimateScript = nil -- Reference to the character's animation script
	
	-- For Fake Lag Walk Speed
	local OriginalWalkSpeed = 16 -- Default Roblox walk speed
	
	-- For Fake Lag Anchoring
	local IsRootPartAnchoredForFakeLag = false
	
	
	------------------------------------------------------------------------
	-- --- Helper Functions ---
	------------------------------------------------------------------------
	
	-- Function to find the LocalPlayer's Character components (Neck joint, Animation script)
	local function FindLocalPlayerCharacterComponents()
		LocalPlayerNeckJoint = nil -- Reset in case of character change
		InitialNeckC0 = nil
		InitialNeckC1 = nil
		LocalPlayerAnimateScript = nil -- Reset animation script reference
	
		print("Attempting to find character components...")
	
		local character = LocalPlayer.Character
		if character then
			print("Character found.")
			-- Wait for character appearance to be loaded on the Player object
			-- Use a pcall in case the event is problematic in this game
			local success, result = pcall(function()
				-- Check if character is already loaded and appearance is ready
				if character:IsLoaded() and character:FindFirstChildOfClass("Humanoid") and character:FindFirstChild("HumanoidRootPart") then
					print("Character already loaded and ready.")
					return true -- Indicate success
				else
					print("Waiting for LocalPlayer.CharacterAppearanceLoaded...")
					LocalPlayer.CharacterAppearanceLoaded:Wait() -- Corrected event call
					print("LocalPlayer.CharacterAppearanceLoaded event fired.")
					return true -- Indicate success
				end
			end)
	
			if not success or not result then
				warn("Failed to wait for CharacterAppearanceLoaded or character loading issue.")
				-- We can still try to find components, but they might not be fully ready
			end
	
			-- Now that appearance is loaded (or we timed out/failed), the character model should be available
			character = LocalPlayer.Character -- Re-get character in case it changed during wait
			if character then
				print("Character is valid after waiting.")
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if humanoid then
					-- Store original walk speed once the humanoid is available
					OriginalWalkSpeed = humanoid.WalkSpeed
					print("Stored original walk speed: " .. OriginalWalkSpeed)
				else
					warn("Humanoid not found after character loaded.")
				end
	
				-- Find Neck Joint
				local torso = character:FindFirstChild("Torso")
				local upperTorso = character:FindFirstChild("UpperTorso")
	
				if torso then
					LocalPlayerNeckJoint = torso:FindFirstChild("Neck") -- R6
					if LocalPlayerNeckJoint and LocalPlayerNeckJoint:IsA("Motor6D") then
						InitialNeckC0 = LocalPlayerNeckJoint.C0 -- Store initial C0
						print("Found R6 Neck joint.")
					end
				end
				if not LocalPlayerNeckJoint and upperTorso then
					LocalPlayerNeckJoint = upperTorso:FindFirstChild("Neck") -- R15
					if LocalPlayerNeckJoint and LocalPlayerNeckJoint:IsA("Motor6D") then
						InitialNeckC1 = LocalPlayerNeckJoint.C1 -- Store initial C1
						print("Found R15 Neck joint.")
					end
				end
	
				if LocalPlayerNeckJoint then
					print("Found LocalPlayerNeckJoint: " .. LocalPlayerNeckJoint.Name)
				else
					warn("LocalPlayerNeckJoint not found! Anti-Aim head rotation will not work.")
				end
	
				-- Find Animation Script (Commonly named "Animate")
				LocalPlayerAnimateScript = character:FindFirstChild("Animate")
				if LocalPlayerAnimateScript then
					print("Found LocalPlayerAnimateScript.")
				else
					warn("LocalPlayerAnimateScript not found! Anti-Aim head rotation might conflict with animations.")
				end
	
			else
				warn("FindLocalPlayerCharacterComponents: LocalPlayer.Character is nil after waiting for appearance.")
			end
		else
			warn("FindLocalPlayerCharacterComponents: LocalPlayer.Character is nil initially.")
		end
	end
	
	-- Connect this function to CharacterAdded
	LocalPlayer.CharacterAdded:Connect(FindLocalPlayerCharacterComponents)
	-- Call it once initially in case the character is already loaded
	-- We can wrap this in a task.spawn to avoid blocking if the pcall still hangs
	task.spawn(FindLocalPlayerCharacterComponents)
	
	
	-- Function to apply the chams effect to a player's character
	local function ApplyChams(player: Player)
		-- Check player and character validity at the start
		if not player or not player.Character or ChamsApplied[player] then
			-- print("ApplyChams: Skipping for " .. (player and player.Name or "nil") .. " (no char or already applied)") -- Debug print
			return
		end
	
		-- print("ApplyChams: Attempting to apply to " .. player.Name) -- Debug print
	
		local highlight = Instance.new("Highlight")
		highlight.FillColor = Color3.fromRGB(255, 0, 255) -- Magenta fill (you can change this)
		highlight.OutlineColor = Color3.fromRGB(0, 255, 255) -- Cyan outline (you can change this)
		highlight.FillTransparency = 0.6 -- Adjust transparency
		highlight.OutlineTransparency = 0 -- Solid outline
	
		-- Find a suitable parent. Character model is standard.
		local characterModel = player.Character
		if characterModel then
			highlight.Parent = characterModel -- Parent to the character model
			ChamsApplied[player] = highlight -- Store the highlight instance
			-- print("ApplyChams: Successfully applied chams to " .. player.Name) -- Debug print
		else
			warn("ApplyChams: Could not find character model for " .. player.Name) -- Debug print
		end
	end
	
	-- Function to remove the chams effect from a player's character
	local function RemoveChams(player: Player)
		local highlight = ChamsApplied[player]
		if highlight and highlight.Parent then
			-- print("RemoveChams: Attempting to remove from " .. player.Name) -- Debug print
			highlight:Destroy() -- Remove the highlight instance
			ChamsApplied[player] = nil -- Remove from the tracking table
			-- print("RemoveChams: Successfully removed chams from " .. player.Name) -- Debug print
			-- elseif ChamsApplied[player] then
			-- warn("RemoveChams: Highlight instance found in table but not parented for " .. player.Name) -- Debug print
			-- ChamsApplied[player] = nil -- Clean up the table entry
		end
	end
	
	-- Handle players leaving to remove chams
	Players.PlayerRemoving:Connect(function(player)
		print("PlayerRemoving: " .. player.Name) -- Debug print
		RemoveChams(player) -- Remove chams if applied when player leaves
	end)
	
	
	------------------------------------------------------------------------
	-- --- Core Logic (Runs on Heartbeat when enabled) ---
	------------------------------------------------------------------------
	
	local function OnHeartbeat(deltaTime)
		-- print("Heartbeat running") -- You can add this, but it will print *very* fast
	
		local character = LocalPlayer.Character
		local humanoid = character and character:FindFirstChildOfClass("Humanoid")
		local rootPart = character and character:FindFirstChild("HumanoidRootPart")
	
		-- The Neck joint and Animation script are found via CharacterAdded.
	
	
		-- Reset Anti-Aim head rotation if Anti-Aim is off
		if not AntiAimEnabled and LocalPlayerNeckJoint and LocalPlayerNeckJoint:IsA("Motor6D") then
			-- Reset the Neck joint's rotation to its default (C0 or C1 depending on rig/joint type)
			-- Use the stored initial CFrame for a more accurate reset.
			if InitialNeckC0 and LocalPlayerNeckJoint.C0 ~= InitialNeckC0 then
				LocalPlayerNeckJoint.C0 = InitialNeckC0
				print("Anti-Aim: Reset R6 Neck C0.")
			elseif InitialNeckC1 and LocalPlayerNeckJoint.C1 ~= InitialNeckC1 then
				LocalPlayerNeckJoint.C1 = InitialNeckC1
				print("Anti-Aim: Reset R15 Neck C1.")
			end
		end
	
		-- Fake Lag visual snap logic is now handled in a separate loop started by ToggleFakeLag
	
	
		if not character or not humanoid or not rootPart or humanoid.Health <= 0 then
			CurrentAimbotTarget = nil
			-- Remove chams from all players if local player is dead/no character
			for player, _ in pairs(ChamsApplied) do
				RemoveChams(player)
			end
			return
		end
	
		local camera = Workspace.CurrentCamera
		if not camera then return end
	
		local origin = rootPart.Position -- Aim from the root part position
		local lookVector = camera.CFrame.LookVector -- Use camera's look vector for FOV check
	
		----------------------------------------
		-- Ragebot Logic
		----------------------------------------
		if RagebotEnabled then
			-- print("Ragebot is enabled in Heartbeat")
			local bestTarget = nil
			local closestAngle = math.huge
	
			for _, player in Players:GetPlayers() do
				-- Check player and character validity at the very start of the loop iteration
				if player ~= LocalPlayer and player.Character and player.Character:FindFirstChildOfClass("Humanoid") and player.Character.Humanoid.Health > 0 then
					-- The character exists and is alive, now safely access its children
					local targetPart = player.Character:FindFirstChild(AimbotTargetPart) or player.Character:FindFirstChild("HumanoidRootPart")
					if targetPart then
						local targetPosition = targetPart.Position
						local directionToTarget = (targetPosition - origin)
						local distanceToTarget = directionToTarget.Magnitude
	
						-- Avoid targeting self if for some reason origin/target are same
						if distanceToTarget < 0.1 then continue end
	
						local directionToTargetUnit = directionToTarget.Unit
	
						-- Simple FOV check (angle between camera look vector and target direction from player root)
						local angle = math.acos(math.clamp(lookVector:Dot(directionToTargetUnit), -1, 1)) -- Angle in radians, clamp dot product
						local angleInDegrees = math.deg(angle)
	
						if angleInDegrees <= AimbotFOV then
							-- ### Add Visibility Check Here! ###
							local raycastParams = RaycastParams.new()
							raycastParams.FilterDescendantsInstances = {character} -- Ignore local player's character
							raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
	
							local raycastResult = Workspace:Raycast(origin, directionToTarget, raycastParams)
	
							if raycastResult and raycastResult.Instance and raycastResult.Instance:IsDescendantOf(player.Character) then
								print("Found visible target: " .. player.Name)
								if angleInDegrees < closestAngle then
									bestTarget = targetPart
									closestAngle = angleInDegrees
								end
							end
							---------------------------------------
						end
					end
				end
			end
	
			CurrentAimbotTarget = bestTarget
	
			if CurrentAimbotTarget then
				print("Aiming at target...")
				local targetPosition = CurrentAimbotTarget.Position
				local direction = (targetPosition - origin)
				local distance = direction.Magnitude
				local directionUnit = direction.Unit
	
				if distance < 0.1 then return end -- Prevent issues if very close
	
				-- Calculate the desired rotation CFrame for the root part
				-- This makes the *character* turn to face the target horizontally.
				local desiredLook = Vector3.new(directionUnit.X, 0, directionUnit.Z).Unit
				local desiredCFrame = CFrame.lookAt(rootPart.Position, rootPart.Position + desiredLook, Vector3.new(0,1,0))
	
				-- Apply the rotation.
				rootPart.CFrame = desiredCFrame -- This sets horizontal rotation
	
				-- You might need to also adjust camera CFrame for vertical aim depending on your character setup
				-- camera.CFrame = CFrame.lookAt(camera.CFrame.Position, targetPosition)
	
	
				-- Auto Fire
				if AutoFireEnabled then
					print("Autofire is enabled - attempting to fire...")
					-- ### Trigger your weapon firing mechanism here! ###
					-- This is game-specific. It might involve:
					-- - Calling a function in your weapon script (if client-side)
					-- - Firing a RemoteEvent to the server (if server-side)
					-- - Simulating a mouse click (less common/reliable for modern weapons)
					-- Example (Placeholder):
					-- LocalPlayer.Backpack:FindFirstChildWhichIsA("Tool"):Activate() -- Example for simple tools
					-- or
					-- game.ReplicatedStorage.RemoteEvents.FireWeapon:FireServer(targetPosition) -- Example for remote event
				end
			else
				-- print("No valid aimbot target found.")
				CurrentAimbotTarget = nil
			end
		else
			CurrentAimbotTarget = nil
		end
	
		----------------------------------------
		-- Anti-Aim Logic (Head Rotation)
		----------------------------------------
		if AntiAimEnabled then
			-- print("Anti-Aim is enabled in Heartbeat")
			-- Basic Head Down Anti-Aim by rotating the Neck joint
			if LocalPlayerNeckJoint and LocalPlayerNeckJoint:IsA("Motor6D") and humanoid then
				local rigType = humanoid.RigType
	
				-- This is a simple pitch down rotation.
				local pitchRotation = CFrame.Angles(AntiAimHeadPitch, 0, 0) -- Pitch down by AntiAimHeadPitch
	
				-- Apply the rotation based on RigType
				if rigType == Enum.RigType.R6 and InitialNeckC0 then
					-- For R6, rotate C0 relative to its initial CFrame
					LocalPlayerNeckJoint.C0 = InitialNeckC0 * pitchRotation
					print("Anti-Aim: Applied R6 head pitch.") -- Debug print
				elseif rigType == Enum.RigType.R15 and InitialNeckC1 then
					-- For R15, rotate C1 relative to its initial CFrame
					LocalPlayerNeckJoint.C1 = InitialNeckC1 * pitchRotation
					print("Anti-Aim: Applied R15 head pitch.") -- Debug print
				else
					warn("Anti-Aim: Cannot apply head pitch. RigType not recognized or initial CFrame not stored.")
				end
	
				-- Note: Disabling the character's default animation script's control over the Neck
				-- is often necessary for reliable Anti-Aim head rotation. This is game-specific.
				-- We are attempting to disable the "Animate" script in the ToggleAntiAim function.
	
			elseif LocalPlayerNeckJoint then
				warn("Anti-Aim: LocalPlayerNeckJoint found but is not a Motor6D. Head rotation not applied.")
			end
		else
			-- Reset Anti-Aim head rotation is handled at the start of Heartbeat
			-- if LocalPlayerNeckJoint then ... reset logic ... end
		end
	
		----------------------------------------
		-- Fake Lag Logic (Visual Chams)
		----------------------------------------
		-- Chams logic runs regardless of FakeLagEnabled to ensure cleanup
		if FakeLagEnabled then
			-- print("FakeLag is enabled in Heartbeat")
			-- Apply chams to other players
			for _, player in Players:GetPlayers() do
				-- Check player and character validity at the very start of the loop iteration
				if player ~= LocalPlayer and player.Character and player.Character:FindFirstChildOfClass("Humanoid") and player.Character.Humanoid.Health > 0 then
					-- The character exists and is alive, now safely apply chams
					ApplyChams(player) -- Apply if not already applied
				else
					RemoveChams(player) -- Remove if they are no longer valid targets (e.g., dead, left)
				end
			end
	
			-- Remove chams from players who are no longer in the game or no longer valid
			local playersToRemove = {}
			for player, _ in pairs(ChamsApplied) do
				-- Check player and character validity before attempting to remove chams
				if not Players:FindFirstChild(player.Name) or not player.Character or (player.Character:FindFirstChildOfClass("Humanoid") and player.Character.Humanoid.Health <= 0) then
					table.insert(playersToRemove, player)
				end
			end
			for _, player in ipairs(playersToRemove) do
				RemoveChams(player)
			end
	
	
		else -- Fake Lag is disabled
			-- Remove chams from all players if Fake Lag is turned off
			for player, _ in pairs(ChamsApplied) do
				RemoveChams(player)
			end
			-- Clear the table completely
			ChamsApplied = {}
		end
	end
	
	
	------------------------------------------------------------------------
	-- --- GUI Update Functions ---
	------------------------------------------------------------------------
	
	local function UpdateButtonText(button: GuiObject | nil, enabled: boolean, buttonName: string)
		if button and (button:IsA("TextButton") or button:IsA("TextLabel")) then
			button.Text = buttonName .. ": " .. (enabled and "ON" or "OFF")
			-- You might also change text color here
			-- button.TextColor3 = enabled and Color3.new(0, 1, 0) or Color3.new(1, 0, 0) -- Green for ON, Red for OFF
		end
	end
	
	local function UpdateAntiAimTypeText(button: GuiObject | nil, typeString: string)
		if button and (button:IsA("TextButton") or button:IsA("TextLabel")) then
			button.Text = "AntiAim Type: " .. typeString
		end
	end
	
	
	------------------------------------------------------------------------
	-- --- Core Toggle Logic (Called by GUI) ---
	------------------------------------------------------------------------
	
	local function ToggleRagebot()
		print("ToggleRagebot called!")
		RagebotEnabled = not RagebotEnabled
		UpdateButtonText(ToggleRagebotButton, RagebotEnabled, "RageBot")
	
		if RagebotEnabled or AntiAimEnabled or FakeLagEnabled then
			-- Start the main update loop if not already running for any feature
			if not CoreLogicConnection or not CoreLogicConnection.Connected then -- Added check for .Connected
				print("Connecting Heartbeat...")
				CoreLogicConnection = RunService.Heartbeat:Connect(OnHeartbeat)
			end
		else
			if CoreLogicConnection and CoreLogicConnection.Connected then -- Added check for .Connected
				print("Disconnecting Heartbeat...")
				CoreLogicConnection:Disconnect()
				CoreLogicConnection = nil
			end
		end
	
		if not RagebotEnabled then
			CurrentAimbotTarget = nil -- Clear target when disabled
		end
	
		print("Ragebot " .. (RagebotEnabled and "Enabled" or "Disabled"))
	end
	
	local function ToggleAutoFire()
		print("ToggleAutoFire called!")
		AutoFireEnabled = not AutoFireEnabled
		UpdateButtonText(AutoFireToggleButton, AutoFireEnabled, "AutoFire")
		print("AutoFire " .. (AutoFireEnabled and "Enabled" or "Disabled"))
	end
	
	local function ToggleAntiAim()
		print("ToggleAntiAim called!")
		AntiAimEnabled = not AntiAimEnabled
		UpdateButtonText(AntiAimToggleButton, AntiAimEnabled, "AntiAim")
	
		-- Toggle the animation script's Enabled state
		if LocalPlayerAnimateScript then
			LocalPlayerAnimateScript.Enabled = not AntiAimEnabled -- Disable if AntiAim is ON, Enable if AntiAim is OFF
			print("Animation script Enabled state set to: " .. tostring(LocalPlayerAnimateScript.Enabled)) -- FIXED CONCATENATION ERROR
		else
			warn("Cannot toggle animation script, reference is nil.")
		end
	
	
		if RagebotEnabled or AntiAimEnabled or FakeLagEnabled then
			-- Start the main update loop if not already running for any feature
			if not CoreLogicConnection or not CoreLogicConnection.Connected then -- Added check for .Connected
				print("Connecting Heartbeat (from AntiAim)...")
				CoreLogicConnection = RunService.Heartbeat:Connect(OnHeartbeat)
			end
		else
			if CoreLogicConnection and CoreLogicConnection.Connected then -- Added check for .Connected
				print("Disconnecting Heartbeat (from AntiAim)...")
				CoreLogicConnection:Disconnect()
				CoreLogicConnection = nil
			end
		end
	
		-- Reset Anti-Aim head rotation immediately if Anti-Aim is turned off and Neck joint exists
		if not AntiAimEnabled and LocalPlayerNeckJoint and LocalPlayerNeckJoint:IsA("Motor6D") then
			if LocalPlayerNeckJoint:IsA("Motor6D") then
				if InitialNeckC0 then
					LocalPlayerNeckJoint.C0 = InitialNeckC0
					print("Anti-Aim: Reset R6 Neck C0 (Toggle).")
				elseif InitialNeckC1 then
					LocalPlayerNeckJoint.C1 = InitialNeckC1
					print("Anti-Aim: Reset R15 Neck C1 (Toggle).")
				end
			end
		end
	
	
		print("Anti-Aim " .. (AntiAimEnabled and "Enabled" or "Disabled"))
	end
	
	local function ToggleFakeLag()
		print("ToggleFakeLag called!")
		FakeLagEnabled = not FakeLagEnabled
		UpdateButtonText(FakeLagToggleButton, FakeLagEnabled, "FakeLag")
		print("FakeLag " .. (FakeLagEnabled and "Enabled" or "Disabled"))
	
		local character = LocalPlayer.Character
		local humanoid = character and character:FindFirstChildOfClass("Humanoid")
	
		if FakeLagEnabled then
			-- Store original walk speed and increase it
			if humanoid then
				OriginalWalkSpeed = humanoid.WalkSpeed -- Store the current walk speed
				humanoid.WalkSpeed = OriginalWalkSpeed * FakeLagWalkSpeedMultiplier -- Set to a high value
				print("Increased walk speed for Fake Lag to: " .. humanoid.WalkSpeed)
			else
				warn("Cannot increase walk speed, humanoid not found.")
			end
	
			-- Start the visual snap loop
			if not FakeLagLoopConnection or not FakeLagLoopConnection.Connected then
				FakeLagLoopConnection = task.spawn(function()
					while FakeLagEnabled do -- Loop runs as long as FakeLag is enabled
						local currentCharacter = LocalPlayer.Character
						local currentRootPart = currentCharacter and currentCharacter:FindFirstChild("HumanoidRootPart")
	
						if currentRootPart and not IsRootPartAnchoredForFakeLag then
							IsRootPartAnchoredForFakeLag = true
							currentRootPart.Anchored = true
							-- print("Anchored root part.") -- Debug print
	
							task.wait(FakeLagAnchorDuration) -- Stay anchored for a short duration
	
							if currentRootPart then -- Check again before unanchoring
								currentRootPart.Anchored = false
								-- print("Unanchored root part.") -- Debug print
							end
							IsRootPartAnchoredForFakeLag = false
	
							task.wait(FakeLagSnapInterval) -- Wait for the specified snap interval
						else
							-- If character/root part is missing or already anchored, wait a bit before checking again
							task.wait(1)
						end
					end
					-- Cleanup when the loop stops (FakeLagEnabled becomes false)
					local finalCharacter = LocalPlayer.Character
					local finalHumanoid = finalCharacter and finalCharacter:FindFirstChildOfClass("Humanoid")
					local finalRootPart = finalCharacter and finalCharacter:FindFirstChild("HumanoidRootPart")
	
					-- Reset walk speed if it wasn't already
					if finalHumanoid and OriginalWalkSpeed and finalHumanoid.WalkSpeed ~= OriginalWalkSpeed then
						finalHumanoid.WalkSpeed = OriginalWalkSpeed
						print("Fake Lag loop stopped - Reset walk speed.")
					end
	
					-- Ensure unanchored if it was anchored by this script
					if finalRootPart and IsRootPartAnchoredForFakeLag then
						finalRootPart.Anchored = false
						IsRootPartAnchoredForFakeLag = false
						print("Fake Lag loop stopped - Unanchored root part.")
					end
				end)
				print("Started Fake Lag visual snap loop.")
			end
	
		else -- FakeLag is being disabled
			-- Reset walk speed immediately
			if humanoid and OriginalWalkSpeed then
				humanoid.WalkSpeed = OriginalWalkSpeed
				print("Reset walk speed.")
			end
	
			-- The while loop condition (while FakeLagEnabled do) will stop the FakeLagLoopConnection
	
			-- Ensure unanchored immediately when disabled
			if character and character:FindFirstChild("HumanoidRootPart") and IsRootPartAnchoredForFakeLag then
				character.HumanoidRootPart.Anchored = false
				IsRootPartAnchoredForFakeLag = false
				print("FakeLag Disabled - Unanchored root part immediately.")
			end
		end
	
	
		-- Heartbeat connection logic remains the same, handles other features + chams
		if RagebotEnabled or AntiAimEnabled or FakeLagEnabled then
			-- Start the main update loop if not already running for any feature
			if not CoreLogicConnection or not CoreLogicConnection.Connected then -- Added check for .Connected
				print("Connecting Heartbeat (from ToggleFakeLag)...")
				CoreLogicConnection = RunService.Heartbeat:Connect(OnHeartbeat)
			end
		else
			if CoreLogicConnection and CoreLogicConnection.Connected then -- Added check for .Connected
				-- Ensure unanchored on disconnect if it was anchored by this script (redundant with loop cleanup but safer)
				if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and IsRootPartAnchoredForFakeLag then
					LocalPlayer.Character.HumanoidRootPart.Anchored = false
					IsRootPartAnchoredForFakeLag = false
					print("Ensured root part is unanchored on disconnect.")
				end
				print("Disconnecting Heartbeat...")
				CoreLogicConnection:Disconnect()
				CoreLogicConnection = nil
			end
		end
	
		-- Immediately apply or remove chams when toggled
		if FakeLagEnabled then
			print("FakeLag Enabled - Applying chams immediately...") -- Debug print
			for _, player in Players:GetPlayers() do
				-- Check player and character validity before applying chams immediately
				if player ~= LocalPlayer and player.Character and player.Character:FindFirstChildOfClass("Humanoid") and player.Character.Humanoid.Health > 0 then
					ApplyChams(player)
				end
			end
		else
			print("FakeLag Disabled - Removing chams immediately...") -- Debug print
			for player, _ in pairs(ChamsApplied) do
				RemoveChams(player)
			end
			-- Clear the table completely
			ChamsApplied = {}
		end
	end
	
	local function ChangeAntiAimType()
		print("Change AntiAim Type clicked!")
		-- This is a placeholder. You'll need logic here to cycle through types
		-- (e.g., Basic, Spin, etc.) and update the AntiAimType variable.
		-- For now, it just stays "Basic"
		UpdateAntiAimTypeText(AntiAimTypeButton, AntiAimType)
	end
	
	
	------------------------------------------------------------------------
	-- --- Initial Setup & Connect GUI Button Events ---
	------------------------------------------------------------------------
	
	-- Connect the buttons to the toggle functions
	if ToggleRagebotButton then
		UpdateButtonText(ToggleRagebotButton, RagebotEnabled, "RageBot") -- Set initial text
		ToggleRagebotButton.MouseButton1Click:Connect(ToggleRagebot)
	else warn("Connect failed: ToggleRagebotButton not found!") end
	
	if AutoFireToggleButton then
		UpdateButtonText(AutoFireToggleButton, AutoFireEnabled, "AutoFire") -- Set initial text
		AutoFireToggleButton.MouseButton1Click:Connect(ToggleAutoFire)
	else warn("Connect failed: AutoFireToggleButton not found!") end
	
	if AntiAimToggleButton then
		UpdateButtonText(AntiAimToggleButton, AntiAimEnabled, "AntiAim") -- Set initial text
		AntiAimToggleButton.MouseButton1Click:Connect(ToggleAntiAim)
	else warn("Connect failed: AntiAimToggleButton not found!") end
	
	if FakeLagToggleButton then
		UpdateButtonText(FakeLagToggleButton, FakeLagEnabled, "FakeLag") -- Set initial text
		FakeLagToggleButton.MouseButton1Click:Connect(ToggleFakeLag)
	else warn("Connect failed: FakeLagToggleButton not found!") end
	
	if AntiAimTypeButton then
		UpdateAntiAimTypeText(AntiAimTypeButton, AntiAimType) -- Set initial text
		AntiAimTypeButton.MouseButton1Click:Connect(ChangeAntiAimType) -- Connect to your type changing function
	else warn("Connect failed: AntiAimTypeButton not found!") end
	
	
	-- Initial state check to start the loop if any feature is already enabled (unlikely on first run)
	if RagebotEnabled or AntiAimEnabled or FakeLagEnabled then
		if not CoreLogicConnection or not CoreLogicConnection.Connected then
			print("Connecting Heartbeat from initial check...")
			CoreLogicConnection = RunService.Heartbeat:Connect(OnHeartbeat)
		end
	end
	
	print("Script finished initial setup. Checking for enabled features...")
	
end
task.spawn(SCRIPT_1e)
-- // StarterGui.Xeonware.Frame.Mains.Legit.Frame.aimboton.LocalScript \\ --
local function SCRIPT_2e()
local script = UI["2e"]
	script.Parent.Parent.aimboton.MouseButton1Click:Connect(function()
		script.Parent.Parent.aimbot_main.Enabled = true
		script.Parent.Parent.aimboton.Visible = false
		script.Parent.Parent.note.Visible = true
	end)
end
task.spawn(SCRIPT_2e)
-- // StarterGui.Xeonware.Frame.Mains.Misc.main.settings \\ --
local function SCRIPT_34()
local script = UI["34"]
	local walkButton = script.Parent:WaitForChild("walk")
	local walkValue = walkButton:WaitForChild("value")
	local jumpButton = script.Parent:WaitForChild("jump")
	local jumpValue = jumpButton:WaitForChild("value")
	
	local function updateWalkSpeed()
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoid = character:WaitForChild("Humanoid")
	
		local walkSpeed = tonumber(walkValue.Text)
		if walkSpeed then
			humanoid.WalkSpeed = walkSpeed
		else
			warn("Invalid walk speed value")
		end
	end
	
	local function updateJumpPower()
		local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoid = character:WaitForChild("Humanoid")
	
		local jumpPower = tonumber(jumpValue.Text)
		if jumpPower then
			humanoid.JumpHeight = jumpPower
		else
			warn("Invalid jump power value")
		end
	end
	
	walkButton.MouseButton1Click:Connect(updateWalkSpeed)
	jumpButton.MouseButton1Click:Connect(updateJumpPower)
	
	
end
task.spawn(SCRIPT_34)
-- // StarterGui.Xeonware.Frame.Mains.Misc.main.bhop \\ --
local function SCRIPT_3b()
local script = UI["3b"]
	--!strict
	
	-- LocalScript for Bunnyhop and Strafe with GUI Toggle and Speed Boost
	-- This version assumes the script is a child of the 'main' instance
	-- and looks for the 'bhop_button' directly inside its parent (the 'main' instance).
	-- Uses Players.CharacterRemoving for cleaner character cleanup.
	
	local Players = game:GetService("Players")
	local UserInputService = game:GetService("UserInputService")
	local RunService = game:GetService("RunService")
	local LocalPlayer = Players.LocalPlayer
	
	-- Check if LocalPlayer exists
	if not LocalPlayer then
		warn("LocalPlayer not found!")
		return
	end
	
	-- Wait for the character to be added
	local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local Humanoid = Character:FindFirstChildOfClass("Humanoid")
	
	-- Check if Humanoid exists
	if not Humanoid then
		warn("Humanoid not found in character!")
		return
	end
	
	-- Configuration
	local BASE_WALKSPEED = Humanoid.WalkSpeed -- Store the original walkspeed
	local SPEED_BOOST_PER_JUMP = 3 -- How much walkspeed to add per jump
	local MAX_SPEED_BOOST = 30 -- Maximum additional speed boost allowed
	local AUTO_BHOP_ENABLED = false -- Initial state of the script
	
	-- GUI Setup (Find the button using script.Parent)
	local scriptParent = script.Parent -- This should be the 'main' instance
	
	-- --- IMPORTANT: Ensure your GUI structure matches this ---
	-- This script expects to be placed directly inside the 'main' instance
	-- and looks for a button named 'bhop_button' as a direct child of 'main'.
	-- Increased wait time to 20 seconds
	local ToggleButton = scriptParent:WaitForChild("bhop_button", 20) -- Wait up to 20 seconds for the button named 'bhop_button'
	if not ToggleButton or not (ToggleButton:IsA("TextButton") or ToggleButton:IsA("ImageButton")) then
		warn("Instance named 'bhop_button' not found or is not a Button inside script.Parent ('main')! Please check GUI hierarchy and loading time.")
		return -- Cannot proceed without the toggle button
	end
	-- --- End of IMPORTANT section ---
	
	-- Function to update button text (can be adapted based on your GUI design)
	local function updateToggleButton()
		if AUTO_BHOP_ENABLED then
			ToggleButton.Text = "Bunnyhop: ON"
			-- Optional: Change color if your button uses BackgroundColor3
			-- ToggleButton.BackgroundColor3 = Color3.fromRGB(85, 255, 0) -- Green
		else
			ToggleButton.Text = "Bunnyhop: OFF"
			-- Optional: Change color if your button uses BackgroundColor3
			-- ToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Red
		end
	end
	
	-- Function to toggle the script
	local function toggleBunnyhop()
		AUTO_BHOP_ENABLED = not AUTO_BHOP_ENABLED
		updateToggleButton()
	
		if not AUTO_BHOP_ENABLED then
			-- Reset walkspeed and speed boost when toggled off
			currentSpeedBoost = 0
			-- Only reset if Humanoid still exists (character hasn't been removed yet)
			if Humanoid and Humanoid.Parent then
				Humanoid.WalkSpeed = BASE_WALKSPEED
			end
		end
	end
	
	-- Connect the button click event
	ToggleButton.MouseButton1Click:Connect(toggleBunnyhop)
	
	-- Variables for strafing and speed boost
	local currentSpeedBoost = 0
	local lastJumpTime = 0
	local JUMP_COOLDOWN = 0.1 -- Minimum time between jumps
	
	-- Function to handle automatic jumping and speed boost
	local function handleBunnyhop()
		-- Ensure Humanoid is valid before accessing its properties
		if AUTO_BHOP_ENABLED and Humanoid and Humanoid.Health > 0 then
			local currentTime = tick()
	
			-- Auto-jump if on the ground and cooldown is over
			if Humanoid.FloorMaterial ~= Enum.Material.Air and (currentTime - lastJumpTime) > JUMP_COOLDOWN then
				Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
				lastJumpTime = currentTime
	
				-- Increase walkspeed on jump, up to the max boost
				currentSpeedBoost = math.min(currentSpeedBoost + SPEED_BOOST_PER_JUMP, MAX_SPEED_BOOST)
				Humanoid.WalkSpeed = BASE_WALKSPEED + currentSpeedBoost
			end
	
			-- Basic strafing logic (maintaining speed while moving sideways)
			-- This relies on the default Roblox movement system handling the direction.
			-- The speed boost applied above will affect strafing speed as well.
			-- More advanced strafing might involve manipulating the Humanoid.MoveDirection
			-- or applying forces, but this basic approach works with the speed boost.
	
		else
			-- If not enabled, ensure speed is reset (handled by toggleBunnyhop)
			-- and no auto-jumping occurs.
		end
	end
	
	-- Connect to the RunService.Stepped event for continuous checks
	RunService.Stepped:Connect(handleBunnyhop)
	
	-- Initial update of the button state
	updateToggleButton()
	
	-- Optional: Reset speed if the character dies
	Humanoid.Died:Connect(function()
		currentSpeedBoost = 0
		-- Only reset if Humanoid still exists (though Died usually means it does for a moment)
		if Humanoid and Humanoid.Parent then
			Humanoid.WalkSpeed = BASE_WALKSPEED
		end
		AUTO_BHOP_ENABLED = false -- Also disable the script on death
		updateToggleButton()
	end)
	
	-- Use CharacterRemoving for cleanup when the character model is removed
	LocalPlayer.CharacterRemoving:Connect(function(character)
		-- Ensure this is the character we were tracking
		if character == Character then
			currentSpeedBoost = 0
			-- The Humanoid might already be gone here, so check before accessing
			if Humanoid and Humanoid.Parent then
				Humanoid.WalkSpeed = BASE_WALKSPEED
			end
			AUTO_BHOP_ENABLED = false -- Also disable the script
			updateToggleButton()
			-- Note: The Humanoid variable in this script will still hold a reference
			-- to the old Humanoid. When the new character loads, CharacterAdded:Wait()
			-- will provide the new character, and the initial setup will run again.
		end
	end)
	
	-- Re-setup the script when a new character is added (e.g., after dying)
	LocalPlayer.CharacterAdded:Connect(function(newCharacter)
		Character = newCharacter
		Humanoid = Character:FindFirstChildOfClass("Humanoid")
	
		if Humanoid then
			BASE_WALKSPEED = Humanoid.WalkSpeed -- Update base speed for the new character
			currentSpeedBoost = 0 -- Reset speed boost for the new character
			-- AUTO_BHOP_ENABLED state persists unless reset by toggle or CharacterRemoving/Died
			updateToggleButton() -- Update button text based on current state
	
			-- Re-connect Died event for the new Humanoid
			Humanoid.Died:Connect(function()
				currentSpeedBoost = 0
				if Humanoid and Humanoid.Parent then
					Humanoid.WalkSpeed = BASE_WALKSPEED
				end
				AUTO_BHOP_ENABLED = false
				updateToggleButton()
			end)
		else
			warn("New character added but Humanoid not found!")
		end
	end)
	
end
task.spawn(SCRIPT_3b)
-- // StarterGui.Xeonware.Frame.Mains.Scripts.un.un.LocalScript \\ --
local function SCRIPT_42()
local script = UI["42"]
	script.Parent.Parent.un.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Ragoon821/ScriptXHub-v2/main/ScriptXhub%20v2.1-serpent"))()
	end)
end
task.spawn(SCRIPT_42)
-- // StarterGui.Xeonware.Frame.Buttons.LocalScript \\ --
local function SCRIPT_5d()
local script = UI["5d"]
	script.Parent.config_button.MouseButton1Click:Connect(function()
		script.Parent.Parent.Mains.Configs.Visible = true
		script.Parent.Parent.Mains.Credits.Visible = false
		script.Parent.Parent.Mains.Legit.Visible = false
		script.Parent.Parent.Mains.Misc.Visible = false
		script.Parent.Parent.Mains.Rage.Visible = false
		script.Parent.Parent.Mains.Scripts.Visible = false
		script.Parent.Parent.Mains.Visuals.Visible = false
		script.Parent.Parent.Mains.Welcome.Visible = false
	end)
	
	script.Parent.credits_button.MouseButton1Click:Connect(function()
		script.Parent.Parent.Mains.Configs.Visible = false
		script.Parent.Parent.Mains.Credits.Visible = true
		script.Parent.Parent.Mains.Legit.Visible = false
		script.Parent.Parent.Mains.Misc.Visible = false
		script.Parent.Parent.Mains.Rage.Visible = false
		script.Parent.Parent.Mains.Scripts.Visible = false
		script.Parent.Parent.Mains.Visuals.Visible = false
		script.Parent.Parent.Mains.Welcome.Visible = false
	end)
	
	script.Parent.legit_button.MouseButton1Click:Connect(function()
		script.Parent.Parent.Mains.Configs.Visible = false
		script.Parent.Parent.Mains.Credits.Visible = false
		script.Parent.Parent.Mains.Legit.Visible = true
		script.Parent.Parent.Mains.Misc.Visible = false
		script.Parent.Parent.Mains.Rage.Visible = false
		script.Parent.Parent.Mains.Scripts.Visible = false
		script.Parent.Parent.Mains.Visuals.Visible = false
		script.Parent.Parent.Mains.Welcome.Visible = false
	end)
	
	script.Parent.misc_button.MouseButton1Click:Connect(function()
		script.Parent.Parent.Mains.Configs.Visible = false
		script.Parent.Parent.Mains.Credits.Visible = false
		script.Parent.Parent.Mains.Legit.Visible = false
		script.Parent.Parent.Mains.Misc.Visible = true
		script.Parent.Parent.Mains.Rage.Visible = false
		script.Parent.Parent.Mains.Scripts.Visible = false
		script.Parent.Parent.Mains.Visuals.Visible = false
		script.Parent.Parent.Mains.Welcome.Visible = false
	end)
	
	script.Parent.rage_button.MouseButton1Click:Connect(function()
		script.Parent.Parent.Mains.Configs.Visible = false
		script.Parent.Parent.Mains.Credits.Visible = false
		script.Parent.Parent.Mains.Legit.Visible = false
		script.Parent.Parent.Mains.Misc.Visible = false
		script.Parent.Parent.Mains.Rage.Visible = true
		script.Parent.Parent.Mains.Scripts.Visible = false
		script.Parent.Parent.Mains.Visuals.Visible = false
		script.Parent.Parent.Mains.Welcome.Visible = false
	end)
	
	script.Parent.scripts_button.MouseButton1Click:Connect(function()
		script.Parent.Parent.Mains.Configs.Visible = false
		script.Parent.Parent.Mains.Credits.Visible = false
		script.Parent.Parent.Mains.Legit.Visible = false
		script.Parent.Parent.Mains.Misc.Visible = false
		script.Parent.Parent.Mains.Rage.Visible = false
		script.Parent.Parent.Mains.Scripts.Visible = true
		script.Parent.Parent.Mains.Visuals.Visible = false
		script.Parent.Parent.Mains.Welcome.Visible = false
	end)
	
	script.Parent.visuals_button.MouseButton1Click:Connect(function()
		script.Parent.Parent.Mains.Configs.Visible = false
		script.Parent.Parent.Mains.Credits.Visible = false
		script.Parent.Parent.Mains.Legit.Visible = false
		script.Parent.Parent.Mains.Misc.Visible = false
		script.Parent.Parent.Mains.Rage.Visible = false
		script.Parent.Parent.Mains.Scripts.Visible = false
		script.Parent.Parent.Mains.Visuals.Visible = true
		script.Parent.Parent.Mains.Welcome.Visible = false
	end)
end
task.spawn(SCRIPT_5d)
-- // StarterGui.Xeonware.Frame.Buttons.ImageLabel.LocalScript \\ --
local function SCRIPT_5f()
local script = UI["5f"]
	local own = script.Parent.Parent.ImageLabel
	x = 0
	y = 3
	xx = 0
	while true do
		if x == 360 then
			xx = 1
		end
		if y == 82 then
			y = y - 1
		end
		if xx == 1 then
			x = x -1
			if x == 0 then
				xx = 0
			end
		end
		x = x + 10
		own.Rotation = x
		wait(0.01)
		end
	
end
task.spawn(SCRIPT_5f)
-- // StarterGui.Xeonware.Frame.Buttons.welcome \\ --
local function SCRIPT_64()
local script = UI["64"]
	script.Parent.Parent.Mains.Configs.Visible = false
	script.Parent.Parent.Mains.Credits.Visible = false
	script.Parent.Parent.Mains.Legit.Visible = false
	script.Parent.Parent.Mains.Misc.Visible = false
	script.Parent.Parent.Mains.Rage.Visible = false
	script.Parent.Parent.Mains.Scripts.Visible = false
	script.Parent.Parent.Mains.Visuals.Visible = false
	script.Parent.Parent.Mains.Welcome.Visible = true
	script.Disabled = true
end
task.spawn(SCRIPT_64)
-- // StarterGui.Xeonware.Frame.drag \\ --
local function SCRIPT_65()
local script = UI["65"]
	local TweenService = game:GetService('TweenService')
	local Runservice = game:GetService('RunService')
	local Plr = game:GetService('Players').LocalPlayer
	local plrMouse = Plr:GetMouse()
	
	local FrameGui = script.Parent
	local Hold = false
	local WithinFrame = false
	local Dragging = false
	
	Runservice.RenderStepped:Connect(function()
		if Hold and WithinFrame and not Dragging then
			Dragging = true
		elseif not Hold then
			Dragging = false
		end
		
		if Dragging then
			local X,Y = plrMouse.X,plrMouse.Y
			TweenService:Create(FrameGui,TweenInfo.new(0.1),{Position = UDim2.new(0,X,0,Y)}):Play()
		end
		
	end)
	
	FrameGui.MouseEnter:Connect(function()
		WithinFrame = true
	end)
	
	FrameGui.MouseLeave:Connect(function()
		WithinFrame = false
	end)
	
	plrMouse.Button1Down:Connect(function()
		Hold = true
	end)
	
	plrMouse.Button1Up:Connect(function()
		Hold = false
		Dragging = false
	end)
end
task.spawn(SCRIPT_65)
-- // StarterGui.Xeonware.Frame.ImageLabel.LocalScript \\ --
local function SCRIPT_67()
local script = UI["67"]
	local own = script.Parent.Parent.ImageLabel
	x = 0
	y = 3
	xx = 0
	while true do
		if x == 360 then
			xx = 1
		end
		if y == 82 then
			y = y - 1
		end
		if xx == 1 then
			x = x -1
			if x == 0 then
				xx = 0
			end
		end
		x = x + 10
		own.Rotation = x
		wait(0.01)
		end
	
end
task.spawn(SCRIPT_67)
-- // StarterGui.Xeonware.Frame.ImageLabel.LocalScript \\ --
local function SCRIPT_68()
local script = UI["68"]
	-- Get the player and their mouse
	local Players = game:GetService("Players")
	local LocalPlayer = Players.LocalPlayer
	local Mouse = LocalPlayer:GetMouse()
	
	-- Get the GUI element this script is parented to (your ImageLabel/ImageButton)
	local GuiObject = script.Parent
	
	-- Get the container GUI element (the parent of the GuiObject)
	local Container = GuiObject.Parent
	
	-- Make sure the parent is a GUI element that has AbsolutePosition and AbsoluteSize
	if not (Container:IsA("Frame") or Container:IsA("ImageLabel") or Container:IsA("TextLabel") or Container:IsA("ScrollingFrame")) then
		warn("The parent of the image following the mouse is not a standard GUI container (Frame, ImageLabel, etc.). The boundary check might not work as expected.")
		-- You could stop the script here if a proper container is mandatory
		-- script:Destroy()
	end
	
	-- Function to update the GUI object's position
	local function updatePosition()
		-- Get the mouse's current screen position
		local mouseX = Mouse.X
		local mouseY = Mouse.Y
	
		-- Get the size of the GUI object (the image)
		local guiSizeX = GuiObject.AbsoluteSize.X
		local guiSizeY = GuiObject.AbsoluteSize.Y
	
		-- Get the position and size of the container
		local containerPositionX = Container.AbsolutePosition.X
		local containerPositionY = Container.AbsolutePosition.Y
		local containerSizeX = Container.AbsoluteSize.X
		local containerSizeY = Container.AbsoluteSize.Y
	
		-- Calculate the desired position based on the mouse (centered)
		local desiredX = mouseX - guiSizeX / 2
		local desiredY = mouseY - guiSizeY / 2
	
		-- Clamp the desired position within the container bounds
	
		-- Calculate the maximum allowed X position for the top-left corner of the GuiObject
		-- This is the right edge of the container minus the width of the GuiObject
		local maxX = containerPositionX + containerSizeX - guiSizeX
	
		-- Calculate the maximum allowed Y position for the top-left corner of the GuiObject
		-- This is the bottom edge of the container minus the height of the GuiObject
		local maxY = containerPositionY + containerSizeY - guiSizeY
	
		-- The minimum allowed X position is the left edge of the container
		local minX = containerPositionX
	
		-- The minimum allowed Y position is the top edge of the container
		local minY = containerPositionY
	
		-- Clamp the desired X position between minX and maxX
		local clampedX = math.clamp(desiredX, minX, maxX)
	
		-- Clamp the desired Y position between minY and maxY
		local clampedY = math.clamp(desiredY, minY, maxY)
	
		-- Update the position of the GUI object using the clamped values
		GuiObject.Position = UDim2.new(0, clampedX - containerPositionX, 0, clampedY - containerPositionY)
		-- We subtract containerPositionX/Y because the GuiObject's Position is relative to its Parent (the Container)
	end
	
	-- Connect the updatePosition function to the Mouse.Move event
	Mouse.Move:Connect(updatePosition)
	
	-- You might also want to call updatePosition initially
	updatePosition()
end
task.spawn(SCRIPT_68)
-- // StarterGui.Xeonware.Frame.nofiticationsystem \\ --
local function SCRIPT_69()
local script = UI["69"]
	--!strict
	
	-- Variables for customization
	local NOTIFICATION_DURATION = 3 -- How long the notification stays visible (in seconds)
	local NOTIFICATION_WIDTH = 300
	local NOTIFICATION_HEIGHT = 50
	local NOTIFICATION_BG_COLOR = Color3.fromRGB(40, 40, 40) -- Dark grey background
	local NOTIFICATION_TEXT_COLOR = Color3.fromRGB(255, 255, 255) -- White text
	local NOTIFICATION_FONT_SIZE = 20 -- In pixels
	local NOTIFICATION_FONT = Enum.Font.SourceSans
	local NOTIFICATION_Y_OFFSET = 10 -- Distance from the top of the screen
	
	-- Services
	local Players = game:GetService("Players")
	local TweenService = game:GetService("TweenService")
	local RunService = game:GetService("RunService")
	
	-- Get the player and their PlayerGui
	local LocalPlayer = Players.LocalPlayer
	if not LocalPlayer then
		-- Script is likely running before the player is fully loaded
		RunService.Heartbeat:Wait()
		LocalPlayer = Players.LocalPlayer
		if not LocalPlayer then
			warn("Could not get LocalPlayer.")
			return
		end
	end
	
	local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
	
	-- Function to show a custom notification
	-- @param message string The text to display in the notification
	function showNotification(message: string)
		-- Create the main ScreenGui if it doesn't exist
		local notificationGui = PlayerGui:FindFirstChild("CustomNotificationGui")
		if not notificationGui then
			notificationGui = Instance.new("ScreenGui")
			notificationGui.Name = "CustomNotificationGui"
			notificationGui.Parent = PlayerGui
			notificationGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling -- Ensures notifications stack correctly
		end
	
		-- Create the notification frame
		local notificationFrame = Instance.new("Frame")
		notificationFrame.Name = "NotificationFrame"
		notificationFrame.Size = UDim2.new(0, NOTIFICATION_WIDTH, 0, NOTIFICATION_HEIGHT)
		notificationFrame.AnchorPoint = Vector2.new(0.5, 0) -- Anchor at top center
		-- Start position: off-screen, slightly above the top center
		notificationFrame.Position = UDim2.new(0.5, 0, 0, -NOTIFICATION_HEIGHT - NOTIFICATION_Y_OFFSET)
		notificationFrame.BackgroundColor3 = NOTIFICATION_BG_COLOR
		notificationFrame.BackgroundTransparency = 0 -- Start opaque
		notificationFrame.BorderSizePixel = 0
		notificationFrame.Parent = notificationGui
	
		-- Create the text label inside the frame
		local notificationText = Instance.new("TextLabel")
		notificationText.Name = "NotificationText"
		notificationText.Size = UDim2.new(1, -20, 1, -10) -- Slightly smaller than the frame for padding
		notificationText.Position = UDim2.new(0.5, 0, 0.5, 0)
		notificationText.AnchorPoint = Vector2.new(0.5, 0.5)
		notificationText.BackgroundTransparency = 1 -- Make it transparent
		notificationText.TextColor3 = NOTIFICATION_TEXT_COLOR
		notificationText.Font = NOTIFICATION_FONT
		notificationText.TextSize = NOTIFICATION_FONT_SIZE
		notificationText.TextScaled = false -- Don't scale text
		notificationText.TextWrapped = true -- Wrap text if too long
		notificationText.TextXAlignment = Enum.TextXAlignment.Center
		notificationText.TextYAlignment = Enum.TextYAlignment.Center
		notificationText.Text = message
		notificationText.Parent = notificationFrame
	
		-- --- Tweening ---
	
		-- Define the target position (on-screen, top center with Y_OFFSET)
		local targetPosition = UDim2.new(0.5, 0, 0, NOTIFICATION_Y_OFFSET)
	
		-- Tween Info for sliding in
		local slideInInfo = TweenInfo.new(
			0.5, -- Duration
			Enum.EasingStyle.Quad, -- Easing Style
			Enum.EasingDirection.Out -- Easing Direction
		)
	
		-- Create and play the slide-in tween
		local slideInTween = TweenService:Create(notificationFrame, slideInInfo, { Position = targetPosition })
		slideInTween:Play()
	
		-- Wait for the tween to complete
		slideInTween.Completed:Wait()
	
		-- Wait for the notification duration
		task.wait(NOTIFICATION_DURATION)
	
		-- Define the target position for sliding out (back off-screen)
		local slideOutPosition = UDim2.new(0.5, 0, 0, -NOTIFICATION_HEIGHT - NOTIFICATION_Y_OFFSET)
	
		-- Tween Info for sliding out
		local slideOutInfo = TweenInfo.new(
			0.5, -- Duration
			Enum.EasingStyle.Quad, -- Easing Style
			Enum.EasingDirection.In -- Easing Direction
		)
	
		-- Create and play the slide-out tween
		local slideOutTween = TweenService:Create(notificationFrame, slideOutInfo, { Position = slideOutPosition })
		slideOutTween:Play()
	
		-- Wait for the tween to complete, then destroy the notification frame
		slideOutTween.Completed:Wait()
		notificationFrame:Destroy()
	end
	
	showNotification("Loaded Xeonware BETA DEV 1.0")
	-- --- Example Usage ---
	
	-- You can call the showNotification function from other scripts or events.
	-- Here are a few examples you can test:
	
	-- Example 1: Show a simple message after a few seconds
	-- task.wait(5) -- Wait 5 seconds after joining
	-- showNotification("Welcome to the game!")
	
	-- Example 2: Show multiple notifications sequentially
	-- task.wait(10)
	-- showNotification("This is your first notification.")
	-- task.wait(3) -- Wait a bit before the next one
	-- showNotification("And this is your second!")
	
	-- Example 3: Call it from a remote event (common practice)
	-- You would typically fire a RemoteEvent from the server to the client
	-- when you want to show a notification.
	-- LocalPlayer.YourRemoteEvent.OnClientEvent:Connect(function(message)
	--     showNotification(message)
	-- end)
	
	
	-- Keep the script running if it's in StarterPlayerScripts
	-- If it's in StarterGui attached to the ScreenGui, it will run automatically
end
task.spawn(SCRIPT_69)
-- // StarterGui.Xeonware.controls \\ --
local function SCRIPT_6b()
local script = UI["6b"]
	script.Parent.Frame.minza.MouseButton1Click:Connect(function()
		script.Parent.Frame.Visible = false
		script.Parent.minframe.Visible = true
	end)
	script.Parent.minframe.unmiza.MouseButton1Click:Connect(function()
		script.Parent.Frame.Visible = true
		script.Parent.minframe.Visible = false
	end)
end
task.spawn(SCRIPT_6b)
-- // StarterGui.Xeonware.minframe.drag \\ --
local function SCRIPT_6f()
local script = UI["6f"]
	local TweenService = game:GetService('TweenService')
	local Runservice = game:GetService('RunService')
	local Plr = game:GetService('Players').LocalPlayer
	local plrMouse = Plr:GetMouse()
	
	local FrameGui = script.Parent
	local Hold = false
	local WithinFrame = false
	local Dragging = false
	
	Runservice.RenderStepped:Connect(function()
		if Hold and WithinFrame and not Dragging then
			Dragging = true
		elseif not Hold then
			Dragging = false
		end
		
		if Dragging then
			local X,Y = plrMouse.X,plrMouse.Y
			TweenService:Create(FrameGui,TweenInfo.new(0.1),{Position = UDim2.new(0,X,0,Y)}):Play()
		end
		
	end)
	
	FrameGui.MouseEnter:Connect(function()
		WithinFrame = true
	end)
	
	FrameGui.MouseLeave:Connect(function()
		WithinFrame = false
	end)
	
	plrMouse.Button1Down:Connect(function()
		Hold = true
	end)
	
	plrMouse.Button1Up:Connect(function()
		Hold = false
		Dragging = false
	end)
end
task.spawn(SCRIPT_6f)

return UI["1"], require;
